CoreASM Test_KernelExtensions_01

use Standard
use KernelExtensions

init InitRule

rule InitRule = {
	if steps = undef then {
		steps := 1 
		a(5) := "a5"
		b(8, 12) := "b8-12"
		c(10) := undef
		alist := [1, 5, 19]
		amap := {10->100, 20->400, 30->900}
	} 

	if steps = 1 then {
		pb := @b
		myrule1 := @TestRule1
		myrule2 := @TestRule2
		steps := 2
	}

	if steps = 2 then {
		print (@a)(5) + ", " + pb()(8,12) + ", " + (alist)(2) + ", " + (amap)(20) 
		(pb)(8, 12) := "b812"
		pb()(8, 13) := "b813"
		steps := 3
	}

	if steps = 3 then 
		seq call myrule1() ()
		next call myrule2() ("he", "it")
}

rule TestRule1 = 
	print "TestRule: " + pb()(8, 12) 

rule TestRule2(a, b) = {
	print a + " likes " + b
	program(self) := undef
}

