CoreASM Test

use StandardPlugins
use OperatorPlugin

init initRule

operator index 50 !! E! = dec
operator index 50 ? E?  = dec
operator index 50 ## E# = inc
operator index 50 ~ E~ = inc

derived dec = 1 - 1
derived inc = 1 + 1

/*
 * @minsteps 1
 * @maxsteps 1
 *
 * @refuse "01: 0"
 * @refuse "02: 0"
 * @refuse "03: undef"
 * @refuse "04: undef"
 * @refuse "05: 0"
 * @refuse "06: 0"
 * @refuse "07: 0"
 * @refuse "08: undef"
 * @refuse "09: undef"
 * @refuse "10: 0"
 * @refuse "11: 0"
 * @refuse "12: 0"
 * @refuse "13: undef"
 * @refuse "14: undef"
 * @refuse "15: 0"
 * @refuse "16: 0"
 * @refuse "17: 0"
 * @refuse "18: undef"
 * @refuse "19: undef"
 * @refuse "20: 0"
 * @refuse "21: 0"
 * @refuse "22: 0"
 * @refuse "23: 0"
 * @refuse "24: undef"
 * @refuse "25: undef"
 */
rule initRule =
  seq
    print ("01: " + (1?1E?))
  next
    print ("02: " + (2?3?1E?E?))
  next
    print ("03: " + (3?E?))
  next
    print ("04: " + (2?3?E?E?))
  next
    print ("05: " + (4?2E??3?1E?E?))
  next
    print ("06: " + (1!!1E!))
  next
    print ("07: " + (2!!3!!1E!E!))
  next
    print ("08: " + (3!!E!))
  next
    print ("09: " + (2!!3!!E!E!))
  next
    print ("10: " + (4!!2E!!!3!!1E!E!))
  next
    print ("11: " + (1##-1E#))
  next
    print ("12: " + (-2##3##-1E#E#))
  next
    print ("13: " + (3##E#))
  next
    print ("14: " + (2##3##E#E#))
  next
    print ("15: " + (-4##2E###3##-1E#E#))
  next
    print ("16: " + (1~-1E~))
  next
    print ("17: " + (-2~3~-1E~E~))
  next
    print ("18: " + (3~E~))
  next
    print ("19: " + (2~3~E~E~))
  next
    print ("20: " + (-4~2E~~3~-1E~E~))
  next
    print ("21: " + (5!!6E!~1E~))
  next
    print ("22: " + (5!!6E!~1##2?1~1E~E?E#E~))
  next
    print ("23: " + (5?6E?##1E#))
  next
    print ("24: " + (5!!6E!~1##2?1~E~E?E#E~))
  next
    print ("25: " + (5!!E!~1##2?1~1E~E?E#E~))
