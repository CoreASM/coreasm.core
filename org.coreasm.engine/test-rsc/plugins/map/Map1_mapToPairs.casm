CoreASM Map1_mapToPairs

use Standard
use Map
init Start

/*
 * @minsteps 1
 * @maxsteps 1
 *
 * @require "[2, 1]"
 * @require "[1, Hello]"
 * @require "[3, 1]"
 * @require "[a, {"
 * @require "3->4"
 * @require "1->2"
 * @require "[c, {"
 * @require "3->{ -> }"
 * @require "2->World"
 * @require "1->Hello"
 * @require "[b, 2]"
 * @require "[1, 2]"
 * @require "[3, 4]"
 * @require "[b, 2]"
 * @require "[c, {"
 * @require "[3, { -> }]"
 * @require "[2, World]"
 * @require "[1, Hello]"
 */
rule Start =
	seqblock
		map1 := {->}
		map2 := {1->"Hello", 2->"World", 3 -> map1}
		map3 := toMap({[1,"Hello"],[2,1],[3,1]})
		map4 := {"a" -> toMap({[1,2],[3,4]}),"b" -> 2, "c" -> map2}
		print mapToPairs(map3)
		print mapToPairs(map4)
		print mapToPairs({"a" -> mapToPairs(toMap({[1,2],[3,4]})),"b" -> 2, "c" -> mapToPairs(map2)})
	endseqblock