CoreASM Set3_binary

use Standard

init Start

/*
 * @minsteps 1
 * @maxsteps 1
 *
 * @require "{6, 2, 10, 4, 8}\n"
 * @require "{0, -6, -2, -10, -4, -8}\n"
 * @require "{0, -6, 14, 12, 2, 10, -4, 8, 28, 6, 30, 24, 26, -2, 20, -10, 4, 22, 16, -8, 18}\n"
 * @require "false\n"
 * @require "true\n"
 * @require "true\n"
 */
rule Start =
	seqblock
		set1 := {x is a | a in [-10..10 step 1] with isEvenNumber(a)}
		set2 := {x is a | a in {y is b^(1/2) | b in [1..1000 step 1]} with isEvenNumber(a)}
		print (set1 intersect set2)
		print (set1 diff set2)
		print (set1 union set2)
		print (set1 subset set2)
		print ((set1 intersect set2) subset set1)
		print ({} subset set1)
	endseqblock
