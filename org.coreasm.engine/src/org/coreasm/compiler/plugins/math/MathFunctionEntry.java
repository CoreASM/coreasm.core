package org.coreasm.compiler.plugins.math;

import org.coreasm.compiler.CompilerEngine;
import org.coreasm.compiler.codefragment.CodeFragment;
import org.coreasm.compiler.codefragment.CodeFragmentException;
import org.coreasm.compiler.components.classlibrary.LibraryEntryType;
import org.coreasm.compiler.components.classlibrary.MemoryInclude;

/**
 * Represents a mathematical function generated by the math plugin
 * @author Markus Brenner
 *
 */
public class MathFunctionEntry extends MemoryInclude {
	private String name;
	private CodeFragment body;
	
	/**
	 * Initializes the function entry
	 * @param name The name of the function
	 * @param body The code body of the function
	 * @param engine The compiler engine supervising the compilation process
	 */
	public MathFunctionEntry(String name, CodeFragment body, CompilerEngine engine){
		super(engine, name, "MathPlugin", LibraryEntryType.STATIC);
		this.name = name;
		this.body = body;
	}

	protected String buildContent(String entryName) throws CodeFragmentException{
		String result = "package " + getPackage(entryName) + ";\n"
				+ "import " + runtimePkg() + ".*;\n"
				+ "import java.util.List;\n"
				+ "import " + engine.getPath().pluginStaticPkg() + ".NumberPlugin.NumberElement;\n"
				+ "public class " + name + " extends MathFunction{\n";
		
		result += body.generateCode(engine);
		
		result += "}\n";
	
		return result;
	}
}
