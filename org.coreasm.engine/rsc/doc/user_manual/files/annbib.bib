@preamble{{\small}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
% Annotated Bibliography on Abstract State Machines (ASMs) %
% Egon Boerger and James K. Huggins                        %
% BibTeX Version                                           %
% Last Revised 16 Sep 2003                                 %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% This is the current version of an annotated bibliography
% of papers which deal with or use ASMs. It is compiled to a
% great extent from references and annotations provided by
% the authors of the listed papers and extends the annotated
% bibliography which previously appeared in \cite{Boerger95a};
% it appear in print as \cite{BoeHug98}.  Comments, additions
% and corrections are welcome and should be sent to
% boerger(at)di.unipi.it and huggins(at)acm.org.

% Current updates of this bibliography (as well as somme of
% the papers listed below) will be available on the ASM web
% sites http://www.eecs.umich.edu/gasm and
% http://www.uni-paderborn.de/cs/asm.html.

% The following principle has been used for defining the
% keys. 

% The key for a paper published in 1945 by a single author)
% Bach is Bach45, i.e. the author's name, where the first
% letter is a capital, followed by the last two digits of
% the year of publication of the paper. The key for a paper
% with two authors, Bach and Beethoven, is BacBee45; if
% there is a third author, Brahms, it is BaBeBr45; with a
% fourth author, Bartok, it becomes BaBeBB45, etc.

% The order of the references is alphabetical; it is
% chronological within a group of authors. If for a group of
% authors there is more than one paper in the one year 1945,
% these papers receive keys with suffix 45a, 45b, 45c etc.		  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@MastersThesis{Ahrendt95, 
  author =       "W. Ahrendt", 
  title =        "{Von Prolog zur WAM. Verifikation der
		  Prozedur\"ubersetzung mit KIV.}", 
  school =       "Universit{\"at} Karlsruhe", 
  year =         "1995", 
  address =      "Karlsruhe, Germany", 
  noteNOT =         "\medskip \newline In German, starting point for
                 \cite{SchAhr97}. See comment to \cite{BoeRos95}." 
}		  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Anlauff00,
  author = 	 {M. Anlauff},
  title = 	 {{XASM -- An Extensible, Component-Based Abstract
                  State Machines Language}},
  booktitle = 	 {{Abstract State Machines: Theory and Applications}},
  pages =	 {69--90},
  year =	 {2000},
  editor =	 {{Y. Gurevich and P. Kutter and M. Odersky and L. Thiele}},
  volume =	 {1912},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT = 	 {\medskip \newline The XASM (Extensible ASM) language
                  for producing executable ASMs is presented.  A
                  development environment for XASM systems is
                  described.  (XASM was formerly known as Aslan.)
                  Also appears in TIK-Report 87, Swiss Federal Institute
                  of Technology (ETH) Zurich, March 2000, 1--21.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{AnDKTW01,
  author = 	 {{M. Anlauff and D. Fischer and P. Kutter and
                  J. Teich and R. Weper}},  
  title = 	 {{Hierarchical Microprocessor Design Using XASM}},
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {271-274},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline A discussion of a tool-supported
                  approach for microprocessor design.  Designs are
                  automatically translated into XASM code.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InProceedings{AnKuPi97,
  author =       {M. Anlauff and P. Kutter and A. Pierantonio},
  title =        {{Formal Aspects of and Development Environments for
		  Montages}}, 
  booktitle =    {{2nd International Workshop on the Theory and Practice
                  of Algebraic Specifications}},
  editor =       {M. Sellink},
  address =      {Amsterdam},		  
  series =       {Workshops in Computing},
  year =         {1997},
  publisher =    {Springer},
  noteNOT =         {\medskip \newline A description of the use of
		  Montages \cite{KutPie97a} and the {\sc Gem-Mex} tool,
		  with some small examples.}
}		  
		  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@TechReport{AnKuPi98,
  author = 	 {M. Anlauff and P. Kutter and A. Pierantonio},
  title = 	 {{Montages/Gem-Mex: a Meta Visual Programming Generator}},
  institution =  {Swiss Federal Institute of Technology (ETH) Zurich},
  year = 	 {1998},
  type =	 {TIK-Report},
  number =	 {35},
  noteNOT =	 {\medskip \newline An introduction to Montages and
                  Gem-Mex, the development tool for creating Montages.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{AnKuPi99a,
  author = 	 {M. Anlauff and P. Kutter and A. Pierantonio},
  title = 	 {{Enhanced Control Flow Graphs in Montages}},
  booktitle = 	 {{Proceedings of Perspectives of System Informatics
                  (PSI'99)}},  
  series =	 {{Lecture Notes in Computer Science}},
  year =	 {1999},
  publisher =	 {Springer},
  noteNOT = 	 {\medskip \newline A refined definition of Montages,
                  based on the notion of finite state machines.  An
                  extension of \cite{KutPie97a}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{AnKuPi99b,
  author = 	 {M. Anlauff and P. Kutter and A. Pierantonio},
  title = 	 {{Tool Support for Language Design and Prototyping
                  with Montages}},
  booktitle = 	 {Proceedings of Compiler Construction (CC'99)},
  series =	 {Lecture Notes in Computer Science},
  year =	 {1999},
  publisher =	 {Springer},
  noteNOT =	 {\medskip \newline A description of the Gem-Mex
                  Montages tool.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{AnKuPT99,
  author = 	 {M. Anlauff and P. Kutter and A. Pierantonio and L. Thiele},
  title = 	 {{Generating an Action Notation Environment from
                  Montages Descriptions}},
  booktitle = 	 {{Proceedings of the 2nd International Workshop on
                  Action Semantics (AS'99)}},
  editor =	 {P. Mosses and D. Watt},
  number =	 {NS-99-3},
  series =	 {BRICS Notes Series},
  year =	 {1999},
  organization = {University of Aarhus, Department of Computer Science},
  month =	 {March},
  pages =	 {1--42},
  noteNOT =	 {\medskip \newline Montages \cite{AnKuPi99a} are used
                  to provide executable semantics for Action Notation,
                  another formal specification methodology.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@Article{Araujo97,
  author = 	 {L. Araujo},
  title = 	 {{Correctness proof of a Distributed Implementation
		  of Prolog by means of Abstract State Machines}},
  journal = 	 {{Journal of Universal Computer Science}},
  year = 	 {1997},
  volume =	 {3},
  number =	 {5},
  pages =	 {416-422},
  noteNOT =	 {\medskip \newline Building upon \cite{BoeRos95}, a 
                  specification and a proof of
		  correctness for the Prolog Distributed Processor
		  (PDP), a WAM extension for parallel execution of
		  Prolog on distributed memory are provided. A 
		  preliminary version appeared in 1996 under the title
		  {\em Correctness proof of a Parallel Implementation
		  of Prolog by means of Evolving Algebras} as
		  Technical Report DIA 21-96 of Dpto. Inform\'atica y
		  Autom\'atica, Universidad Complutense de Madrid.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{BaBGSV00,
  author = 	 {M. Barnett and E. B\"orger and Y. Gurevich and
                  W. Schulte and M. Veanes},
  title = 	 {{Using Abstract State Machines at Microsoft: A Case Study}},
  booktitle = 	 {{Abstract State Machines: Theory and Applications}},
  pages =	 {367--380},
  year =	 {2000},
  editor =	 {{Y. Gurevich and P. Kutter and M. Odersky and L. Thiele}},
  volume =	 {1912},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT = 	 {\medskip \newline A description of a case study
                  modeling a debugger of a stack-based runtime environment.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{BaCaSV01,
  author = 	 {{M. Barnett and C. Campbell and W. Schulte and M. Veanes}},
  title = 	 {{Specification, Simulation and Testing of COM
                  Components using Abstract State Machines}},
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {266-270},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline A description of the use of
                  ASMs (in particular, ASML) to specify, simulate, and
                  test the interfaces of Microsoft COM (Component
                  Object Model) components.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@TechReport{BaNaSc01,
  author = 	 {{M. Barnett and L. Nachmanson and W. Schulte}},
  title = 	 {{Conformance Checking of Components Against Their
                  Non-deterministic Specifications}},  
  institution =  {Microsoft Research},
  year = 	 {2001},
  type =	 {Technical Report},
  number =	 {MSR-TR-2001-56},
  month =	 {June},
  noteNOT =	 {\medskip \newline A method for testing a Microsoft
                  COM (Component Object Model) component against a
                  (possibly non-deterministic) ASM specification is
                  presented.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{BarSch01a,
  author = 	 {{M. Barnett and W. Schulte}},
  title = 	 {{Spying on Components: A Runtime Verification Technique}},
  booktitle = 	 {{Workshop on Specification and Verification of
                  Component-Based Systems, OOPSLA 2001}},
  pages =	 {7-13},
  year =	 {2001},
  series =	 {Iowa State Technical Report 01-09a},
  month =	 {October},
  noteNOT =	 {\medskip \newline The use of AsmL to specify
                  behavioral interfaces for COM components is
                  presented, including runtime verification of the
                  components without reinstrumentation of the
                  implementation.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@Article{BarSch01b,
  author = 	 {M. Barnett and W. Schulte},
  title = 	 {{The ABCs of Specification: AsmL, Behavior, and Components}},
  journal = 	 {Informatica},
  year = 	 {2001},
  month =        {November},
  volume =	 {25},
  number =	 {4},
  noteNOT =	 {\medskip \newline AsmL is used to specify behavioral
                  interfaces for components.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@TechReport{BarSch02,
  author = 	 {M. Barnett and W. Schulte},
  title = 	 {{Contracts, Components, and their Runtime
                  Verification on the .NET Platform}},
  institution =  {Microsoft Research},
  year = 	 {2002},
  type =	 {Technical Report},
  number =	 {MSR-TR-2002-38},
  month =	 {April},
  noteNOT =	 {\medskip \newline AsmL is used to specify behavioral
                  interfaces for .NET programs.  These programs can
                  be run as stand-along simulations or used as runtime
                  contracts to check the behavior of .NET programs
                  during their execution.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InCollection{BeBoDuGR96,
  author = 	 {C. Beierle and E. B\"orger and I. Durdanovic and
		  U. Gl\"asser and E. Riccobene},
  title = 	 {{Refining Abstract Machine Specifications of the
		  Steam Boiler Control to Well Documented Executable Code}},
  booktitle = 	 {{Formal Methods for Industrial Applications.
		  Specifying and Programming the Steam-Boiler Control}},
  publisher =	 {Springer},
  year =	 {1996},
  editor =	 {J.-R. Abrial and E. B\"orger and H. Langmaack},
  number =	 {1165},
  series =	 {LNCS},
  pages =	 {62-78},
  noteNOT =	  {\medskip \newline The steam-boiler control
 		  specification problem is used to illustrate how 
 		  ASMs applied to the specification and the verification of
 		  complex systems can be exploited for a reliable and
 		  well documented development of executable, but
 		  formally inspectable and systematically modifiable
 		  code. A hierarchy of stepwise refined abstract
 		  machine models is developed, the ground version of
 		  which can be checked for whether it faithfully
 		  reflects the informally given problem.  The sequence
 		  of machine models yields various abstract views of
 		  the system, making the various design decisions
 		  transparent, and leads to a $C^{++}$ program. This
 		  program has been demonstrated during the
 		  Dagstuhl-Meeting on Methods for Semantics and
 		  Specification, in June 1995, to control the FZI
 		  Steam-Boiler simulator satisfactorily. \\ The proofs
 		  of properties of the ASM models provide insight into
 		  the structure of the system which supports easily
 		  maintainable extensions and modifications of both
 		  the abstract specification and the implementation.
                  For a continuation of this line of research see
                  \cite{BoeMea97}.}
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@InProceedings{BeaSli97a,
  author = 	 {D. B\`eauquier and A. Slissenko},
  title = 	 {{The Railroad Crossing Problem: Towards Semantics of
		  Timed Algorithms and their Model-Checking in
		  High-Level Languages}},
  booktitle = 	 {TAPSOFT'97: Theory and Practice of Software
		  Development, 7th International Joint Conference CAAP/FASE},
  editor =	 {M. Bidoit and M. Dauchet},
  volume =	 {1214},
  series =	 {LNCS},
  year =	 {1997},
  publisher =	 {Springer},
  pages =	 {201-212},
  noteNOT =	 {\medskip \newline The ASM specification of the
 		  railroad crossing problem \cite{GurHug96} is
 		  analyzed to create an appropriate timed-transition
 		  system, suitable for algorithmic model checking.  An
		  early version appeared in 1995 as Technical Report
		  96-10 of Dept. of Informatics, Universit\'e
		  Paris-12. For a continuation see \cite{BeaSli97b}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@TechReport{BeaSli97b,
  author = 	 {D. B\`eauquier and A. Slissenko},
  title = 	 {{On Semantics of Algorithms with Continuous Time}},
  institution =  {Dept. of Informatics, Universit\'e Paris-12},
  year = 	 {1997},
  type =	 {Technical Report},
  number =	 {97-15},
  month =	 {October},
  noteNOT =	 {\medskip \newline A continuation of \cite{BeaSli97a}.
		  The authors consider a class of algorithms with
		  explicit continuous time (a modified version of
		  ASMs), a logic which suffices to write requirements
		  specifications close to natural language, and the
		  corresponding verification problem, all in a single
		  logic.  An enhanced logic from that used in
		  \cite{BeaSli97a} is presented and used to give a
		  proof of correctness of the Railroad Crossing
		  problem \cite{GurHug96}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{BeaSli00,
  author = 	 {D. B\`eauquier and A. Slissenko},
  title = 	 {{Verification of Timed Algorithms: Gurevich Abstract
                  State Machines versus First Order Timed Logic}},
  booktitle = 	 {{Abstract State Machines -- ASM 2000, International
                  Workshop on Abstract State Machines, Monte Verita,
                  Switzerland, Local Proceedings}},
  pages =	 {22--39},
  year =	 {2000},
  editor =	 {Y. Gurevich and P. Kutter and M. Odersky and L. Thiele},
  number =       {87},
  series =	 {TIK-Report},
  month =	 {March},
  organization = {Swiss Federal Institute of Technology (ETH) Zurich},
  noteNOT =	 {\medskip \newline A survey of work by the authors
                  (see \cite{BeaSli97a,BeaSli97b}) on specification
                  and verification of timed algorithms using ASMs and
                  continuous time.}  
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InProceedings{BecPos96,
  author = 	 "B. Beckert and J. Posegga",
  title = 	 "{leanEA: A Lean Evolving Algebra Compiler}",
  booktitle = 	 {{\em Proceedings of the Annual
		  Conference of the European Association for Computer Science
                  Logic (CSL'95)}\/},
  editor =	 {H.~Kleine B{\"u}ning},
  volume =       1092,
  series =	 {LNCS},
  year =	 1996,
  publisher =	 {Springer},
  pages =	 {64-85},
  noteNOT = 	 "\medskip \newline A 9-line Prolog interpreter for
                   sequential ASMs, including discussion
                   of extensions for layered ASMs. A preliminary
		  version appeared in April 1995 under the title {\em
		  leanEA: A poor man's evolving algebra compiler} as
		  internal report 25/95 of Fakult{\"a}t f{\"u}r
		  Informatik, Universit{\"a}t Karlsruhe."    
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@InProceedings{Beierle94, 
  author =       "C. Beierle", 
  title =        "{Formal Design of an Abstract Machine for Constraint 
                  Logic Programming}", 
  editor =       "B. Pehrson and I. Simon", 
  volume =       "I: Technology/Foundations", 
  pages =        "377-382", 
  booktitle =    "IFIP 13th World Computer Congress", 
  year =         "1994", 
  address =      "Elsevier, Amsterdam, the Netherlands", 
  noteNOT =          "\medskip \newline Proposes a general implementation
		  scheme for CLP(X) over an unspecified constraint domain X 
                  by designing a generic extension WAM(X) of the 
                  Warren Abstract Machine and a corresponding generic 
                  compliation scheme of CLP(X) programs to WAM(X) 
                  code. The scheme is based on the specification and 
                  correctness proof for compilation of Prolog programs 
                  in \cite{BoeRos95}." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InCollection{BeiBoe92, 
  author =       "C. Beierle and E. B{\"o}rger", 
  title =        "{Correctness Proof for the WAM With Types}", 
  booktitle =    "Computer Science Logic", 
  publisher =    "Springer", 
  year =         "1992", 
  editor =       "E. {B\"{o}rger} and G. {J\"{a}ger} and H. {Kleine 
                  B\"{u}ning} and M. M. Richter", 
  volume =       "626", 
  series =       "LNCS",
  pages =        "15-34", 
  noteNOT = 	  "\medskip \newline The {B\"{o}rger}-Rosenzweig
 		  specification and correctness proof for compiling
 		  Prolog to WAM \cite {BoeRos95} is extended in
 		  modular fashion to the type-constraint logic
 		  programming language Protos-L which extends Prolog
 		  with polymorphic order-sorted (dynamic) types. In
 		  this paper, the notion of types and dynamic type
 		  constraints are kept abstract (as constraint) in
 		  order to permit applications to different constraint
 		  formalisms like Prolog III or CLP(R). The theorem is
 		  proved that for every appropriate type-constraint
 		  logic programming system L, every compiler to the
 		  WAM extension with an abstract notion of types which
 		  satisfies the specified conditions, is
 		  correct. \cite{BeiBoe96b} extends the specification
 		  and the correctness proof to the full Protos
 		  Abstract Machine by refining the abstract type
 		  constraints to the polymorphic order-sorted types
 		  of PROTOS-L. Also issued as IBM Germany Science
 		  Center Research Report IWBS 205 , 1991. Revised and
 		  final version published in \cite{BeiBoe96a}."  
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  		  
@article{BeiBoe96a,
   author = 	  "C. Beierle and E. B{\"{o}}rger",
   title  = 	  "{Specification and correctness proof of a {WAM} extension
            	  with abstract type constraints}",
   journal = 	  "Formal Aspects of Computing",
   volume = 	  8,
   number = 	  4,
   year = 	  1996,
   pages =        "428-462",
   noteNOT = 	  "\medskip \newline Revised version of \cite{BeiBoe92}."
}
		  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@article{BeiBoe96b,
    author = 	  "C. Beierle and E. B{\"{o}}rger",
    title = 	  "{Refinement of a typed {WAM} extension  
            	  by polymorphic order-sorted types}",
    journal = 	  "Formal Aspects of Computing",
    volume = 	  8,
    number = 	  5,
    year = 	  1996,
    pages =	  "539-564",
    noteNOT = 	  {\medskip \newline Continuation of \cite{BeiBoe96a}
		  which is extended to the full Protos Abstract Machine 
                  by refining the abstract type constraints to the 
                  polymorphic order-sorted types of
		  PROTOS-L. Preliminary version published under the
		  title {\em A WAM Extension for Type-Constraint Logic
		  Programming: Specification and Correctness Proof} as
		  Research Report IWBS 200, IBM Germany Science 
		  Center, Heidelberg, December 1991.}
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@Article{BelRic97,
  author = 	 {G. Bella and E. Riccobene},
  title = 	 {{Formal Analysis of the Kerberos Authentication System}},
  journal = 	 {Journal of Universal Computer Science},
  year = 	 {1997},
  volume =	 {3},
  number =	 {12},
  pages =        {1337-1381},
  noteNOT =         {\medskip \newline A formal model of the whole system
		  is reached through stepwise refinements of ASMs, and
		  is used as a basis both to discover the minimum
		  assumptions to guarantee the correctness of the
		  system, and to analyse its security weaknesses. Each
		  refined model comes together with a correctness
		  refinement theorem.} 
}  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{BelRic98,
  author = 	 {G. Bella and E. Riccobene},
  title = 	 {{A Realistic Environment for Crypto-Protocol
                  Analyses by ASMs}},
  booktitle = 	 {Proceedings of the 28th Annual Conference of the
                  German Society of Computer Science},
  year =	 {1998},
  publisher =	 {Technical Report, Magdeburg University},
  noteNOT =	 {\medskip \newline ASMs are used to give a model of a
                  general, realistic environment in which
                  cryptographic protocols can be faithfully analyzed.
                  The Needham-Schroeder protocol is analyzed as an
                  example. }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@PhdThesis{Blakley92, 
  author =       "B. Blakley", 
  title =        "{A Smalltalk Evolving Algebra and its Uses}", 
  school =       "University of Michigan", 
  year =         "1992", 
  address =      "Ann Arbor, Michigan", 
  noteNOT = 	  "\medskip \newline An early student work on ASMs 
                  (the late date of 1992 is accidental). A reduced 
                  version of Smalltalk is formalized and studied." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Blass00,
  author = 	 {{A. Blass}},
  title = 	 {{Abstract State Machines and Pure Mathematics}},
  booktitle = 	 {{Abstract State Machines: Theory and Applications}},
  pages =	 {9--21},
  year =	 {2000},
  editor =	 {{Y. Gurevich and P. Kutter and M. Odersky and L. Thiele}},
  volume =	 {1912},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT =	 {\medskip \newline A discussion of connections,
                  similarities, and differences between concepts and
                  issues arising in the study of ASMs and those of
                  pure mathematics (particularly set theory and logic).}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  

@Article{BlaGur97,
  author = 	 {A. Blass and Y. Gurevich},
  title = 	 {{The Linear Time Hierarchy Theorems for Abstract
		  State Machines}},
  journal = 	 {Journal of Universal Computer Science},
  year = 	 {1997},
  volume =	 {3},
  number =	 {4},
  pages =	 {247-278},
  noteNOT = 	 {\medskip \newline Contrary to polynomial time,
		  linear time badly depends on the computation
		  model. In 1992, Neil Jones designed a couple of
		  computation models where the linear-speed-up theorem
		  fails and linear-time computable functions form 
		  a proper hierarchy. However, the linear time of
		  Jones' models is too restrictive.  Linear-time
		  hierarchy theorems for random access machines and
		  ASMs are proven. In particular it is shown that
		  there exists a sequential ASM {\em U} (an allusion
		  to ``universal'') and a constant {\em c} such that, under
		  honest time counting, {\em U} simulates every other
		  sequential ASM in lock-step with log factor {\em c}. The 
		  generalization for ASMs is harder and more important because
		  of the greater flexibility of the ASM model. One
	          long-term goal of this line or research is to prove
		  linear lower bounds for linear time problems.
		  The result has been anounced unter the title {\em
		  Evolving Algebras and Linear Time Hierarchy} in
		  B. Pehrson and I. Simon (Eds.), IFIP 13th World
		  Computer Congress, vol.I: Technology/Foundations,
		  Elsevier, Amsterdam, 1994, 383-390.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{BlaGur00a,
  author = 	 {A. Blass and Y. Gurevich},
  title = 	 {{The Logic of Choice}},
  journal = 	 {Journal of Symbolic Logic},
  year = 	 {2000},
  volume =       {65},
  number =       {3},
  month =        {September},
  pages =	 {1264--1310},
  noteNOT = 	 {\medskip \newline The authors study extensions of
		  first-order logic with the choice construct
		  \emph{(choose $x: \phi(x)$)}.  
		  Some results about Hilbert's $\epsilon$ operator are,
		  proven, but in the main part of the paper the case
		  where all choices are independent is considered.  
		  This study was motivated by the choice construct of
		  ASM programs.  Previously appeared as Technical
                  Report CSE-TR-369-98, EECS Dept., University of
                  Michigan, 1998.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{BlaGur00b,
  author = 	 {A. Blass and Y. Gurevich},
  title = 	 {{Background, Reserve, and Gandy Machines}},
  booktitle = 	 {{Computer Science Logic (Proceedings of CSL 2000)}},
  pages =	 {1--17},
  year =	 {2000},
  editor =	 {P. Clote and H. Schwichtenberg},
  volume =	 {1862},
  series =	 {LNCS},
  publisher =	 {Springer},
  noteNOT =	 {\medskip \newline An investigation into the notion
                  of the reserve set of an ASM, exploring the ideas of
                  adding structure within the reserve (such as the
                  hereditarily finite sets of \cite{BlGuSh99}) and the
                  non-determinism of importing new elements.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{BlaGur00c,
  author = 	 {A. Blass and Y. Gurevich},
  title = 	 {{New Zero-One Law and Strong Extension Axioms}},
  journal = 	 {Bulletin of EATCS},
  year = 	 {2000},
  volume =	 {72},
  pages =	 {103--122},
  month =	 {October},
  noteNOT =	 {\medskip \newline A formulation of Shelah's proof of
                  a zero-one law for the choiceless polynomial time
                  variant of ASMs \cite{BlGuSh99}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{BlaGur02,
  author = 	 {A. Blass and Y. Gurevich},
  title = 	 {{Algorithms vs. Machines}},
  journal = 	 {Bulletin of EATCS},
  year = 	 {2002},
  volume =	 {77},
  pages =	 {96--118},
  month =	 {June},
  noteNOT =	 {\medskip \newline A response to a paper of
                  Moschovakis claiming that no state machine describes
                  mergesort at its natural abstraction level.  A
                  natural recursive ASM for mergesort is given.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{BlGuSh99,
  author = 	 {A. Blass and Y. Gurevich and S. Shelah},
  title = 	 {{Choiceless Polynomial Time}},
  journal = 	 {{Annals of Pure and Applied Logic}},
  year = 	 {1999},
  volume = 	 {100},
  pages = 	 {141--187},
  noteNOT =	 {\medskip \newline The question "Is there a
		  computation model whose machines do not distinguish
		  between isomorphic structures and compute exactly
		  polynomial time properties?" became a central
		  question of finite model theory.  The negative
		  answer was conjectured in \cite{Gurevich88a}.  A
		  related question is what portion of Ptime can be
		  naturally captured by a computation model (when
		  inputs are arbitrary finite structures).  A Ptime
		  version of ASMs is used to capture the portion of Ptime
		  where algorithms are not allowed arbitrary choice
		  but parallelism is allowed and, in some cases,
		  implements choice.  Earlier versions appeared as
                  Technical Report CSE-TR-338-97, EECS Department,
                  University of Michigan, 1997, and Technical Report
                  MSR-TR-99-08, Microsoft Research, February 1999.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{BlGuSh01,
  author = 	 {A. Blass and Y. Gurevich and S. Shelah},
  title = 	 {{On Polynomial Time Computation Over Unordered Structures}},
  journal = 	 {Journal of Symbolic Logic},
  year =         {2001},
  pages =	 {to appear},
  noteNOT =	 {\medskip \newline A consideration of several
                  algorithmic problems near the border of the known,
                  logically defined complexity classes contained in
                  polynomial time, including the choiceless polynomial
                  time defined in \cite{BlGuSh99}.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{BlGuVB00,
  author = 	 {A. Blass and Y. Gurevich and J. {Van den Bussche}},
  title = 	 {{Abstract state machines and computationally
                  complete query languages}},
  booktitle = 	 {{Abstract State Machines: Theory and Applications}},
  pages =	 {22--33},
  year =	 {2000},
  editor =	 {{Y. Gurevich and P. Kutter and M. Odersky and L. Thiele}},
  volume =	 {1912},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT =	 {\medskip \newline The use of the choiceless
                  polynomial-time variant of ASMs \cite{BlGuSh99} as a
                  query language for relational databases is explored.
                  Also appears in TIK-Report 87, Swiss Federal Institute
                  of Technology (ETH) Zurich, March 2000, 40--65, and
                  as Microsoft Research Technical Report MSR-TR-99-95.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@InProceedings{Boerger90a, 
  author =       "E. B{\"o}rger", 
  title =        "{A Logical Operational Semantics for Full 
                  Prolog. Part I: Selection Core and Control}", 
  editor =       "E. {B\"{o}rger} and H. {Kleine B\"{u}ning} and 
                  M. M. Richter and W. {Sch\"{o}nfeld}", 
  volume =       "440", 
  series =       "LNCS",
  pages =        "36-64", 
  booktitle =    "CSL'89. 3rd Workshop on Computer Science Logic", 
  year =         "1990", 
  publisher =    "Springer", 
  noteNOT =         "\medskip \newline See Comments to \cite{Boerger92}." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@InCollection{Boerger90b, 
  author =       "E. B{\"o}rger", 
  title =        "{A Logical Operational Semantics of Full 
                  Prolog. Part II: Built-in Predicates for Database 
                  Manipulation}", 
  booktitle =    "Mathematical Foundations of Computer Science", 
  publisher =    "Springer", 
  year =         "1990", 
  editor =       "B. Rovan", 
  volume =       "452", 
  series =       "LNCS",
  pages =        "1-14", 
  noteNOT =         "\medskip \newline See Comments to \cite{Boerger92}." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@InCollection{Boerger92, 
  author =       "E. B{\"o}rger", 
  title =        "{A Logical Operational Semantics for Full 
                  Prolog. Part III: Built-in Predicates for Files, 
                  Terms, Arithmetic and Input-Output}", 
  booktitle =    "Logic From Computer Science", 
  publisher =    "Springer", 
  year =         "1992", 
  editor =       "Y. Moschovakis", 
  volume =       "21", 
  series =       "Berkeley Mathematical Sciences Research Institute 
		  Publications", 
  pages =        "17-50", 
  noteNOT =         "\medskip \newline This paper, along with 
                  \cite{Boerger90a} and \cite{Boerger90b} are the 
                  original 3 papers of {B\"{o}rger} where he gives a 
                  complete ASM formalization of Prolog 
                  with all features discussed in the international 
                  Prolog standardization working group (WG17 of 
                  ISO/IEC JTCI SC22), see \cite{BoeDas90}. The 
                  specification is developed by stepwise refinement, 
                  describing orthogonal language features by modular 
                  rule sets. An improved (tree instead of stack based) 
                  version is found in \cite{BoeRos91c,BoeRos94}; the 
                  revised final version is in \cite{BoeRos94}. These 
		  three papers were also published in 1990 as IBM
		  Germany Science Center Research Reports 111, 115 and
		  117 respectively. The refinement technique is
		  further developed in  
                  \cite{BoeRos95,BoeDur96,BoeMaz97,BoeMea97,BoeSch98a}." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@InProceedings{Boerger94, 
  author =       "E. B{\"o}rger", 
  title =        "{Logic Programming: The Evolving Algebra Approach.}", 
  editor =       "B. Pehrson and I. Simon", 
  volume =       "I: Technology/Foundations", 
  pages =        "391-395", 
  booktitle =    "IFIP 13th World Computer Congress", 
  year =         "1994", 
  address =      "Elsevier, Amsterdam, the Netherlands", 
  noteNOT =         "\medskip \newline Surveys the work which 
                  has been done from 1986--1994 on specifications of 
                  logic programming systems by ASMs." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
 
@InCollection{Boerger95a,
  author = 	  "E. B{\"o}rger",
  title = 	  "{Annotated Bibliography on Evolving Algebras}",
  booktitle =     "Specification and Validation Methods", 
  publisher =     "Oxford University Press", 
  year = 	  "1995", 
  editor = 	  "E. B{\"o}rger", 
  pages = 	  "37-51",
  noteNOT = 	  "\medskip \newline An annotated bibliography of
		  papers (as of 1994) which deal with or use ASMs.
		  For an updated version see \cite{BoeHug98}."
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InProceedings{Boerger95b,
  author = 	 "E. B{\"o}rger",
  title = 	 "{Why Use Evolving Algebras for Hardware and Software
                  Engineering?}", 
  booktitle = 	 "Proceedings of SOFSEM'95, 22nd Seminar on Current
                  Trends in Theory and Practice of Informatics",
  editor = 	 "M. Bartosek and J. Staudek and J. Wiederman",
  year = 	 "1995",
  series = 	 "LNCS",
  volume =       "1012", 
  pages =        "236-271", 
  publisher = 	 "Springer",
  noteNOT = 	 "\medskip \newline A presentation of the salient
                  features of ASMs, as part of a
                  discussion and survey of the use of ASMs in design
                  and analysis of hardware and software systems. The
                  leading example is elaborated in detail in \cite{BoeMaz97}."
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InCollection{Boerger96,
  author = 	 {E. B\"orger},
  title = 	 {{Evolving Algebras and Parnas Tables}},
  booktitle = 	 {{Specification and Semantics}},
  publisher =    {Dagstuhl Seminar No. 9626},
  year =	 {1996},
  editor =	 {H. Ehrig and F. von Henke and J. Meseguer and M. Wirsing},
  type =	 {Report No. 149},
  month =	 {July},
  noteNOT =	 {\medskip \newline Extended abstract showing that Parnas'
		  approach to use function tables for precise
		  program documentation can be generalized and
		  gentilized in a natural way by using ASMs for
		  well-documented program development.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InCollection{Boerger99,
  author = 	 {{E. B\"orger}},
  title = 	 {{High Level System Design and Analysis using
                  Abstract State Machines}},
  booktitle = 	 {{Current Trends in Applied Formal Methods (FM-Trends
                  98)}},
  publisher =	 {Springer-Verlag},
  year =	 {1999},
  editor =	 {{D. Hutter and W. Stephan and P. Traverso and M. Ullmann}},
  series =	 {LNCS},
  number =       {1641},
  pages =        {1-43},
  noteNOT =	 {\medskip \newline A general introduction to ASMs,
                  including definitions of ASMs and illustrations of
                  the main characteristics of the ASM methodology,
                  comparisons with other well-known system design
                  methodologies, and experimental evidence for the ASM
                  thesis.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Boerger00,
  author = 	 {{E. B\"orger}},
  title = 	 {{Abstract State Machines at the Cusp of the Millenium}},
  booktitle = 	 {{Abstract State Machines: Theory and Applications}},
  pages =	 {1--8},
  year =	 {2000},
  editor =	 {{Y. Gurevich and P. Kutter and M. Odersky and L. Thiele}},
  volume =	 {1912},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT =	 {\medskip \newline A brief survey of the history of
                  ASMs and the current challenges in the field.  An
                  introduction to the published proceedings of ASM
                  2000.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Boerger01,
  author = 	 {E. B\"orger},
  title = 	 {{Design for Reuse via Structuring Techniques for ASMs}},
  booktitle = 	 {{Computer Aided Systems Theory -- EUROCAST 2001}},
  pages =	 {20-35},
  year =	 {2001},
  editor =	 {{R. Moreno-Diaz and B. Buchberger and J.-L. Freire}},
  volume =	 {2178},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT =	 {\medskip \newline An application of the ASM
                  structuring techniques of \cite{BoeSch00c} to the
                  definition of the architecture of the Java Virtual
                  Machine in \cite{StScBo01}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@Article{Boerger02a,
  author = 	 {E. B\"orger},
  title = 	 {{The Origins and the Development of the ASM Method for High
                  Level System Design and Analysis}},
  journal = 	 {Journal of Universal Computer Science},
  year = 	 {2002},
  volume =	 {8},
  number =	 {1},
  pages =	 {2--74},
  noteNOT =	 {\medskip \newline A historical survey of ASM research
                  covering 1984--2001.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Boerger02b,
  author = 	 {E. B\"orger},
  title = 	 {{Computation and Specification Models: A Comparative
                  Study}},
  booktitle =	 {{Proceedings of the Fourth International Workshop on
                  Action Semantics, AS 2002}},
  pages =	 {110--133},
  year =	 {2002},
  editor =	 {P. Mosses},
  number =	 {NS-02-8},
  series =	 {BRICS Notes Series},
  organization = {University of Aarhus, Department of Computer Science},
  noteNOT =	 {\medskip \newline ASM definitions are given for the
                  principal current models of computation and
                  high-level system design.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{BoeBol03,
  author = 	 {E. B\"orger and T. Bolognesi},
  title = 	 {{Remarks on Turbo ASMs for Functional Equations and
                  Recursion Schemes}},
  booktitle =	 {{Abstract State Machines 2003. Advances in Theory and
                  Practice}}, 
  pages =	 {218-228},
  year =	 {2003},
  editor =	 {E. B\"orger and A. Gargantini and E. Riccobene},
  number =	 {2589},
  series =	 {LNCS},
  publisher =	 {Springer},
  noteNOT =	 {\medskip \newline In response to \cite{BlaGur02},
                  natural recursive turbo ASMs for mergesort and
                  quicksort are given and discussed.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{BoCaRi00a,
  author = 	 {E. B\"orger and A. Cavarra and E. Riccobene},
  title = 	 {{An ASM Semantics for UML Activity Diagrams}},
  booktitle = 	 {{Algebraic Methodology and Software Technology, 8th
                  International Conference, AMAST 2000, Iowa City,
                  Iowa, USA, May 20-27, 2000 Proceedings}},
  year =	 2000,
  editor = 	 {Teodor Rus},
  pages = 	 {293-308},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  volume = 	 {1816},
  noteNOT =	 {\medskip \newline ASMs are used to provide semantics
                  for activity diagrams in UML, defining a special
                  subclass of ASMs appropriate to modeling such
                  diagrams.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{BoCaRi00b,
  author = 	 {E. B\"orger and A. Cavarra and E. Riccobene},
  title = 	 {{Modeling the DYnamics of UML State Machines}},
  booktitle = 	 {{Abstract State Machines: Theory and Applications}},
  pages =	 {223-241},
  year =	 {2000},
  editor =	 {{Y. Gurevich and P. Kutter and M. Odersky and L. Thiele}},
  volume =	 {1912},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT = 	 {\medskip \newline ASMs are used to define the
                  dynamic semantics of UML state machines, which
                  integrate statecharts with the UML object model.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@TechReport{BoeDas90, 
  author =       "E. B{\"o}rger and K. D{\"a}ssler", 
  title =        "{Prolog: DIN Papers for Discussion}", 
  institution =  "National Physical Laboratory", 
  year =         "1990", 
  type =         "ISO/IEC JTCI SC22 WG17 Prolog Standardization Document", 
  number =       "58", 
  address =      "Middlesex, England", 
  noteNOT =         "\medskip \newline A version of 
                  \cite{Boerger90a,Boerger90b,Boerger92} proposed to the 
                  International Prolog Standardization Committee as a 
                  complete formal semantics of Prolog. An improved 
                  version is in \cite{BoeRos94}." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InProceedings{BoeDel95,
  author = 	 {E.~B{\"o}rger and G. {Del Castillo}},
  title = 	 "{A formal method for provably correct composition of
		  a real-life processor out of basic components ({T}he
		  {APE100} {R}everse {E}ngineering {S}tudy)}", 
  booktitle = 	 {Proceedings of the First IEEE International Conference on
                  Engineering of Complex Computer Systems
		  (ICECCS'95)},
  editor =       {B.~Werner},
  year =	 1995,
  month =	 {November},
  pages =	 {145-148},
  noteNOT =         {\medskip \newline Presents a technique, based on ASMs, by
 		  which a behavioural description of a processor is
 		  obtained as result of the composition of its
 		  (formally specified) basic architectural
 		  components. The technique is illustrated on the
 		  example of a subset the zCPU processor (used as
 		  control unit of the APE100 parallel architecture). A
 		  more complete version, containing the full formal
		  description of the zCPU components, of 
 		  their composition and of the whole zCPU processor,
		  appeared in Y.~Gurevich and E.~B{\"o}rger (Eds.),
		  {\em Evolving Algebras -- Mini-Course, BRICS
		  Technical Report (BRICS-NS-95-4)}, 195-222,
		  University of Aarhus, Denmark, July 1995.}
}
		  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  	  
	  
		  
@InProceedings{BoDeGR94, 
  author =       "E. B{\"o}rger and G. {Del Castillo} and P. Glavan 
                  and D. Rosenzweig", 
  title =        "{Towards a Mathematical Specification of the APE100 
                  Architecture: the APESE Model.}", 
  editor =       "B. Pehrson and I. Simon", 
  volume =       "I: Technology/Foundations", 
  pages =        "396-401", 
  booktitle =    "IFIP 13th World Computer Congress", 
  year =         "1994", 
  address =      "Elsevier, Amsterdam, the Netherlands", 
  noteNOT = 	 "\medskip \newline Defines an ASM
                  model of the high-level programmer's view 
                  of the APE100 parallel architecture. This simple
		  model is refined in \cite{BoeDel95} to an
		  ASM processor model." 
} 
 		  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@InProceedings{BoeDem91, 
  author =       "E. B{\"o}rger and B. Demoen", 
  title =        "{A Framework to Specify Database Update Views for Prolog}", 
  editor =       "M. J. Maluszynski", 
  volume =       "528", 
  series =       "LNCS",
  pages =        "147-158", 
  booktitle =    "PLILP'91. Third International Symposium on 
                  Programming Languages Implementation and Logic Programming.",
  year =         "1991", 
  publisher =    "Springer", 
  noteNOT =         "\medskip \newline Provides a precise definition of 
                  the major Prolog database update views (immediate, 
                  logical, minimal, maximal), within a framework 
                  closely related to 
                  \cite{Boerger90a,Boerger90b,Boerger92}. A preliminary 
                  version of this was published as {\em The View on 
                  Database Updates in Standard Prolog: A Proposal and 
                  a Rationale} in ISO/ETC JTCI SC22 WG17 Prolog 
                  Standardization Report no. 74, February 1991, pp 3-10."  
} 
		  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@Article{BoeDur96,
  author = 	 "E. B{\"o}rger and I. Durdanovi\'c",
  title = 	 "{Correctness of compiling Occam to Transputer code}",
  journal = 	 "Computer Journal",
  volume =       39,
  number =	 1,	  
  year = 	 "1996",
  pages = 	 "52-92",
  noteNOT = 	"\medskip \newline The final draft version has been 
                  issued in BRICS Technical
		  Report (BRICS-NS-95-4), see \cite{BoeGur95}. 
	          Sharpens the refinement method of
		  \cite{BoeRos95} to cope also with parallelism and
		  non determinism for an imperative programming
		  language. The paper provides a mathematical definition
		  of the Transputer Instruction Set architecture for
		  executing Occam together with a correctness proof
		  for a general compilation schema of Occam programs
		  into Transputer code. \smallskip \\ 
		  Starting from the Occam model developed 
		  in \cite{BoDuRo94}, constituted by an
		  abstract processor running a high and a low priority
		  queue of Occam processes (which formalizes the
		  semantics of Occam at the abstraction level of
		  atomic Occam instructions), increasingly more
		  refined levels of Transputer semantics are
		  developed, proving correctness (and when possible
		  also completeness) for each refinement step. \smallskip \\
                  Along the way proof assumptions are collected, thus
		  obtaining a set of natural conditions for compiler
		  correctness, so that the proof is applicable to a
		  large class of compilers. 
                  The formalization of the Transputer
		  instruction set architecture has been the 
		  starting point for
		  applications of the ASM refinement
		  method to the modeling of other architectures (see
		  \cite{BoeDel95,BoeMaz97})."
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InProceedings{BoDuRo94, 
  author =       "E. B{\"o}rger and I. Durdanovi{\'c} and D. Rosenzweig",
  title =        "{Occam: Specification and Compiler Correctness. Part 
                  I: Simple Mathematical Interpreters.}", 
  editor =       "U. Montanari and E. R. Olderog", 
  pages =        "489-508", 
  booktitle =    "Proc. PROCOMET'94 (IFIP Working Conference on 
                  Programming Concepts, Methods and Calculi)", 
  year =         "1994", 
  publisher =    "North-Holland", 
  noteNOT =         "\medskip \newline A truly concurrent ASM
                  model of Occam is defined as basis for a 
                  provably correct, smooth transition to the 
                  Transputer Instruction Set architecture. This model 
                  is stepwise refined, in a provably correct way, 
                  providing: (a) an asynchronous implementation of 
                  synchronous channel communication, (b) its 
                  optimization for internal channels, (c) the 
                  sequential implementation of processors using 
                  priority and time--slicing. See \cite{BoeDur96} for
		  the extension of this work to cover the compilation
		  to Transputer code." 
} 
		  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@InProceedings{BoeGla94, 
  author =       "E. B{\"o}rger and U. Gl{\"a}sser", 
  title =        "{A Formal Specification of the PVM Architecture}", 
  editor =       "B. Pehrson and I. Simon", 
  volume =       "I: Technology/Foundations", 
  pages =        "402-409", 
  booktitle =    "IFIP 13th World Computer Congress", 
  year =         "1994", 
  address =      "Elsevier, Amsterdam, the Netherlands", 
  noteNOT =         "\medskip \newline Provides an ASM model 
                  for the Parallel Virtual machine (PVM, the Oak Ridge 
                  National Laboratory software system that serves as 
                  a general purpose environment for heterogeneous 
                  distributed computing). The model defines PVM at the 
                  C--interface, at the level of abstraction which is 
                  tailored to the programmer's understanding. Cf. the 
                  survey {\em An abstract model of the parallel 
                  virtual machine (PVM)} presented at {\em 7th 
                  International Conference on Parallel and Distributed 
                  Computing Systems} (PDCS'94), Las Vegas/Nevada, 
                  5.-9.10.1994. See \cite{BoeGla95} for an elaboration
		  of this paper." 
} 		  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InCollection{BoeGla95,
  author = 	 {E.~B{\"o}rger and U.~Gl{\"a}sser},
  title = 	 {{M}odelling and {A}nalysis of {D}istributed and {R}eactive
		  {S}ystems using {E}volving {A}lgebras},
  booktitle = 	 {Evolving Algebras -- Mini-Course, BRICS Technical
		  Report (BRICS-NS-95-4)},
  publisher =    {University of Aarhus, Denmark},		   
  year =	 1995,
  editor = 	 {Y.~Gurevich and E.~B{\"o}rger},
  month =	 {July},
  pages =	 {128-153},
  noteNOT =         {\medskip \newline This is a tutorial introduction
		  into the ASM approach to design and verification of
		  complex computing systems. The
		  salient features of the methodology are explained
                  by showing how one can develop from scratch an easily
		  understandable and transparent ASM model for PVM,
		  the widespread virtual architecture for
		  heterogeneous distributed computing.}
}		  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InProceedings{BoGlMu94, 
  author =       "E. B{\"o}rger and U. Gl{\"a}sser and W. M{\"u}ller", 
  title =        "{The Semantics of Behavioral VHDL'93 Descriptions}", 
  pages =        "500-505", 
  booktitle =    "EURO-DAC'94. European Design Automation Conference 
                  with EURO-VHDL'94", 
  year =         "1994", 
  publisher =    "IEEE CS Press", 
  address =      "Los Alamitos, California", 
  noteNOT =         "\medskip \newline Provides a transparent but precise 
                  ASM definition of the signal behavior 
                  and time model of full {\em elaborated} 
                  VHDL'93. This includes guarded signals, delta and 
                  time delays, the two main propagation delay modes 
                  {\em transport,\/inertial}, and the three process 
                  suspensions (wait on/until/for).  Shared variables, 
                  postponed processes and rejection pulse are
		  covered. The work is extended in \cite{BoGlMu95}." 
} 		  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InCollection{BoGlMu95, 
  author = 	 {E. B{\"o}rger and U. Gl{\"a}sser and W. M{\"u}ller},
  title = 	 {{Formal Definition of an Abstract VHDL'93 Simulator 
		  by EA-Machines}}, 
  booktitle =    {Formal Semantics for VHDL}, 
  publisher =    {Kluwer Academic Publishers}, 
  year = 	 {1995}, 
  pages =        {107-139},
  editor = 	 {C. {Delgado Kloos} and P. T. Breuer}, 
  noteNOT = 	 {\medskip \newline Extends the work in 
		  \cite{BoGlMu94} by including the treatment of 
		  variable assignments and of value propagation by 
		  ports. This ASM model for VHDL is extended to
		  analog VHDL in \cite{SaMiSa97}.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@Incollection{BoeGur95,
  author = 	 {E.~B{\"o}rger and Y. Gurevich},
  title = 	 "{Evolving Algebras -- Mini Course}",
  booktitle =    {BRICS Technical Report (BRICS-NS-95-4)},
  publisher =    {University of Aarhus},
  year =	 {1995},
  editor = 	 { E.~B{\"o}rger and Y. Gurevich},
  pages =	 {195-222},
  noteNOT =         {\medskip \newline Contains reprints of the papers 
		  \cite{BlaGur97,Gurevich91,Gurevich94c,Gurevich94b,GurHug94,
                 GurHug97,GurHug93,BoGuRo94,BoeDel95,BoeDur96,BoeGla95}.}
}
		  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@InCollection{BoGuRo94, 
  author =       "E. B{\"o}rger and Y. Gurevich and D. Rosenzweig", 
  title =        "{The Bakery Algorithm: Yet Another Specification and 
                  Verification}", 
  booktitle =    "Specification and Validation Methods", 
  publisher =    "Oxford University Press", 
  year =         "1995", 
  editor =       "E. B{\"o}rger", 
  pages =        "231-243",
  noteNOT =         "\medskip \newline One ASM A1 is 
                  constructed to reflect faithfully the algorithm. 
                  Then a more abstract ASM A2 is 
                  constructed. It is checked that A2 is safe and fair, 
                  and that A1 correctly implements A2. The proofs work 
                  for atomic as well as, mutatis mutandis, for 
                  durative actions." 
} 		  
		  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{BoeHug98,
  author = 	 {E. B\"orger and J. Huggins},
  title = 	 {{Abstract State Machines 1988-1998: Commented ASM
		  Bibliography}}, 
  journal = 	 {Bulletin of EATCS},
  year = 	 {1998},
  volume =	 {64},
  month =	 {February},
  pages =        "105-127",		  
  noteNOT =	 {\medskip \newline The most recently published
		  version of the annotated bibliography of papers
		  which deal with or use ASMs, as of the end of 1997.
		  An update of \cite{Boerger95a}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  	  
		  
@InProceedings{BoLoRo94, 
  author =       "E. B{\"o}rger and F. J. {L{\'o}pez-Fraguas} and 
                  M. {Rodr{\'i}guez-Artalejo}", 
  title =        "{A Model for Mathematical Analysis of Functional 
                  Logic Programs and their Implementations}", 
  editor =       "B. Pehrson and I. Simon", 
  volume =       "I: Technology/Foundations", 
  pages =        "410-415", 
  booktitle =    "IFIP 13th World Computer Congress", 
  year =         "1994", 
  OPTaddress =   "Elsevier, Amsterdam, the Netherlands", 
  noteNOT =         "\medskip \newline Defines an ASM model 
                  for the innermost version of the functional logic 
                  programming language BABEL, extending the Prolog 
                  model of \cite{BoeRos94} by rules which 
                  describe the reduction of expressions to normal 
                  form. The model is stepwise refined towards a 
                  mathematical specification of the implementation of 
                  Babel by a graph--narrowing machine. The refinements 
                  are proved to be correct. A full version containing
		  optimizations and proofs appeared under the title
		  {\em Towards a Mathematical Specification of a
		  Narrowing Machine} as research report DIA 94/5,
		  Dpto. Inform{\'a}tica y Autom{\'a}tica, Universidad
                  Complutense, Madrid 1994." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
	  
		  
@InCollection{BoeMaz97, 
  author =       "E. B{\"o}rger and S. Mazzanti", 
  title =        "{A Practical Method for Rigorously Controllable 
                  Hardware Design}", 
  booktitle =    "{ZUM'97: The Z Formal Specification Notation}",
  publisher =    "Springer", 
  year =         "1997", 
  editor =       "J.P. Bowen and M.B. Hinchey and D. Till",
  volume =       "1212", 
  series =       "LNCS", 
  pages =        "151-187",
  noteNOT =         "\medskip \newline  A technique for specifying and
		  verifying the control of pipelined microprocessors
		  is described, illustrated through formal models for
		  Hennessy and Patterson's RISC architecture DLX. A sequential
		  DLX model is stepwise refined to the pipelined
		  DLX which is proved to be correct. 
		  Each refinement deals with a
		  different pipelining problem (structural hazards, 
		  data hazards, control hazards) and the methods for
		  its solution. This makes the approach applicable to
		  design-driven verification as well as to the
		  verification-driven design of RISC machines.  A
		  preliminary version appeared under the title {\em A
		  correctness proof for pipelining in RISC
		  architectures} as DIMACS (Rutgers University,
		  Princeton University, ATT Bell Laboratories,
		  Bellcore) research report TR 96-22, pp.1-60,
		  Brunswick, New Jersey, 1995.  For a machine-oriented
                  verification of this specification using KIV see
                  \cite{GiKeSc97}."  
} 		  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@Article{BoeMea97,
  author = 	 {E. B\"orger and L. Mearelli},
  title = 	 {{Integrating ASMs into the Software Development Life
		  Cycle}},
  journal = 	 {Journal of Universal Computer Science},
  year = 	 {1997},
  volume =	 {3},
  number =	 {5},
  pages =	 {603-665},
  noteNOT =	 {\medskip \newline Presents a structured software
 		  engineering method which allows the software
 		  engineer to control efficiently the {\em modular
 		  development} and the {\em maintenance} of well
 		  documented, formally inspectable and smoothly
 		  modifiable code out of rigorous ASM {\em models for
 		  requirement specifications}. Shows that the code
 		  properties of interest (like correctness, safety,
 		  liveness and performance conditions) can be proved
 		  at high levels of abstraction by traditional and
 		  reusable mathematical arguments which---where
 		  needed---can be computer verified. Shows also that
 		  the proposed method is appropriate for dealing in a
 		  rigorous but transparent manner with
 		  hardware-software co-design aspects of system
 		  development.\\ The approach is illustrated by
 		  developing a $C^{++}$ program for the production
 		  cell case study. The program has been validated by
 		  extensive experimentation with the FZI production
 		  cell simulator in Karlsruhe and has been submitted
 		  for inspection to the Dagstuhl seminar on
 		  ``Practical Methods for Code Documentation and
 		  Inspection'' (May 1997).  Source code (the ultimate
		  refinement) for the case
		  study appears in \cite{Mearelli97}; the model
		  checking results for the ASM models appears in
                  \cite{Winter97}.  For a PVS verification of the case
                  see \cite{GarRic00}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InProceedings{BoPaSc00,
  author = 	 {E. B\"orger and P. P\"appinghaus and J. Schmid},
  title = 	 {{Report on a Practical Application of ASMs in
                  Software Design}},
  booktitle = 	 {{Abstract State Machines: Theory and Applications}},
  pages =	 {361--366},
  year =	 {2000},
  editor =	 {{Y. Gurevich and P. Kutter and M. Odersky and L. Thiele}},
  volume =	 {1912},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT =	 {\medskip \newline A report on the use of ASMs at
                  Siemens AG to design the railway process model
                  component of FALKO, a German railway timetable
                  validation and construction program.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InCollection{BoeRic91, 
  author =       "E. B{\"o}rger and E. Riccobene", 
  title =        "{Logical Operational Semantics of Parlog. Part I: 
                  And-Parallelism}", 
  booktitle =    "Processing Declarative Knowledge", 
  publisher =    "Springer", 
  year =         "1991", 
  editor =       "H. Boley and M. M. Richter", 
  volume =       "567", 
  series =       "Lecture Notes in Artificial Intelligence", 
  pages =        "191-198", 
  noteNOT =         "\medskip \newline See comment to \cite{BoeRic93}." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
 		  
@InCollection{BoeRic92a, 
  author =       "E. B{\"o}rger and E. Riccobene", 
  title =        "{Logical Operational Semantics of Parlog. Part II: 
                  Or-Parallelism}", 
  booktitle =    "Logic Programming", 
  publisher =    "Springer", 
  year =         "1992", 
  editor =       "A. Voronkov", 
  volume =       "592", 
  series =       "Lecture Notes in Artificial Intelligence", 
  pages =        "27-34", 
  noteNOT =         "\medskip \newline See comment to \cite{BoeRic93}." 
 } 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@TechReport{BoeRic92b, 
  author =       "E. B{\"o}rger and E. Riccobene", 
  title =        "{A Mathematical Model of Concurrent Prolog}", 
  institution =  "Dept. of Computer Science, University of Bristol", 
  year =         "1992", 
  type =         "Research Report", 
  number =       "CSTR-92-15", 
  address =      "Bristol, England", 
  noteNOT =         "\medskip \newline An ASM formalization 
                  of Ehud Shapiro's Concurrent Prolog. Adaptation of 
                  the model defined for PARLOG in \cite{BoeRic93}." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@InCollection{BoeRic93, 
  author =       "E. B{\"o}rger and E. Riccobene", 
  title =        "{A Formal Specification of Parlog}", 
  booktitle =    "Semantics of Programming Languages and Model Theory", 
  publisher =    "Gordon and Breach", 
  year =         "1993", 
  editor =       "M. Droste and Y. Gurevich", 
  pages =        "1-42", 
  noteNOT =         "\medskip \newline An ASM formalization 
                  of Parlog, a well known parallel version of 
                  Prolog. This formalization separates explicitly the 
                  two kinds of parallelism occurring in Parlog: 
                  AND--parallelism and OR--parallelism. It uses an 
                  implementation independent, abstract notion of terms 
                  and substitutions. Improved and extended version of 
                  \cite{BoeRic91,BoeRic92a}, obtained combining the 
                  concurrent features of the Occam model of 
                  \cite{GurMos90} with the logic programming model of 
                  \cite{BoeRos94}. Also published as 
                  Technical Report TR 1/93 from Dipartmento di 
                  Informatica, Universit{\`a} da Pisa, 1993." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InCollection{BoeRic94, 
  author =       "E. B{\"o}rger and E. Riccobene", 
  title =        "{Logic + Control Revisited: An Abstract Interpreter 
                  for G{\"o}del Programs}", 
  booktitle =    "Advances in Logic Programming Theory", 
  publisher =    "Oxford University Press", 
  year =         "1994", 
  editor =       "G. Levi", 
  noteNOT =         "\medskip \newline Develops a simple ASM 
                  interpreter for G{\"o}del programs. This interpreter 
                  abstracts from the deterministic and sequential 
                  execution strategies of Prolog \cite{BoeRos95} and 
                  thus provides a precise interface between logic and 
                  control components for execution of G{\"o}del 
                  programs. The construction is given in abstract 
                  terms which cover the general logic programming 
                  paradigm and allow for concurrency." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@Article{BoRiSc00,
  author = 	 {E. B\"orger and E. Riccobene and J. Schmid},
  title = 	 {{Capturing Requirements by Abstract State Machines:
                  The Light Control Case Study}},  
  journal = 	 {{Journal of Universal Computer Science}},
  year = 	 {2000},
  volume =	 {6},
  number =	 {7},
  pages =	 {597-620},
  noteNOT =	 {\medskip \newline ASMs are applied to the Light
                  Control Case Study (presented in the same volume).
                  The ground model is revised into a form directly
                  executable by the AsmGofer tool.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@TechReport{BoeRos91a, 
  author =       "E. B{\"o}rger and D. Rosenzweig", 
  title =        "{An Analysis of Prolog Database Views and their 
                  Uniform Implementation}", 
  institution =  "EECS Dept., University of Michigan", 
  year =         "1991", 
  type =         "Research Report", 
  number =       "CSE-TR-89-91", 
  address =      "Ann Arbor, Michigan", 
  noteNOT =         "\medskip \newline A mathematical analysis of the 
                  Prolog database views defined in 
                  \cite{BoeDem91}. The analysis is derived by stepwise 
                  refinement of the stack model for Prolog from 
                  \cite{BoeRos95}. It leads to the proposal of a 
                  uniform implementation of the different views which 
                  discloses the tradeoffs between semantic clarity and 
                  efficiency of database update view 
                  implementations. Also issued by the international 
                  Prolog Standardization Committee as ISO/IEC JTCI 
                  SC22 WG17 document no. 80, National Physical 
                  Laboratory, Teddington, England 1991." 
} 
 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@InProceedings{BoeRos91b, 
  author =       "E. B{\"o}rger and D. Rosenzweig", 
  title =        "{From Prolog Algebras Towards WAM -- A Mathematical 
                  Study of Implementation}", 
  editor =       "E. B{\"o}rger and H. {Kleine B{\"u}ning} and 
                  M. M. Richter and W. Sch{\"o}nfeld", 
  volume =       "533", 
  series =       "LNCS", 
  pages =        "31-66", 
  booktitle =    "CSL'90, 4th Workshop on Computer Science Logic", 
  year =         "1991", 
  publisher =    "Springer", 
  noteNOT =         "\medskip \newline Refines B{\"o}rger's Prolog model 
                  \cite{Boerger90b} by elaborating the conjunctive 
                  component---as reflected by compilation of clause 
                  structure into WAM code---and the disjunctive 
                  component---as reflected by compilation of predicate 
                  structure into WAM code. The correctness proofs for 
                  these refinements include last call optimization, 
                  determinacy detection and virtual copying of dynamic 
                  code. Extended in \cite{BoeRos92} and improved in
		  \cite{BoeRos95}."  
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 		  
@InCollection{BoeRos91c, 
  author =       "E. B{\"o}rger and D. Rosenzweig", 
  title =        "{A Formal Specification of Prolog by Tree Algebras}", 
  booktitle =    "Information Technology Interfaces", 
  year =         "1991", 
  editor =       "V. \u{C}eric and V. Dobri{\'c} and V. Lu\u{z}ar and 
                  R. Paul", 
  pages =        "513-518", 
  publisher =    {University Computing Center, Zagreb},
  address =      "Zagreb", 
  noteNOT =         "\medskip \newline Prompted by discussion in the 
                  international Prolog standardization committee 
                  (ISO/IEC JTC1 SC22 WG17), this paper suggests to 
                  replace the stack based model of \cite{Boerger90a} 
                  and the stack implementation of the tree based model 
                  of \cite{Boerger90b} by a pure tree model for 
                  Prolog. An improved version of the latter is the 
                  basis for \cite{BoeRos94} where also an 
                  error in the treatment of the {\em catch} built-in 
                  predicate is corrected."  
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@InCollection{BoeRos92, 
  author =       "E. B{\"o}rger and D. Rosenzweig", 
  title =        "{WAM Algebras -- A Mathematical Study of 
                  Implementation, Part 2}", 
  booktitle =    "Logic Programming", 
  publisher =    "Springer", 
  year =         "1992", 
  editor =       "A. Voronkov", 
  volume =       "592", 
  series =       "Lecture Notes in Artificial Intelligence", 
  pages =        "35-54", 
  noteNOT =         "\medskip \newline Refines the Prolog model of 
                  \cite{BoeRos91b} by elaborating the WAM code for 
                  representation and unification of terms. The 
                  correctness proof for this refinement includes 
                  environment trimming, Warren's variable 
                  classification and switching instructions. Improved 
                  in \cite{BoeRos95}. Also issued as Technical Report 
                  CSE-TR-88-91 from EECS Dept, University of Michigan, 
                  Ann Arbor, Michigan, 1991. " 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 		  
	  
		  
@InCollection{BoeRos93, 
  author =       "E. B{\"o}rger and D. Rosenzweig", 
  title =        "{The Mathematics of Set Predicates in Prolog}", 
  booktitle =    "Computational Logic and Proof Theory", 
  publisher =    "Springer", 
  year =         "1993", 
  editor =       "G. Gottlob and A. Leitsch and D. Mundici", 
  volume =       "713", 
  series =       "LNCS", 
  pages =        "1-13", 
  noteNOT =         "\medskip \newline Provides a logical 
                  (proof--theoretical) specification of the solution 
                  collecting predicates {\em findall, bagof\/} of 
                  Prolog. This abstract definition allows a 
                  logico--mathematical analysis, rationale and 
                  criticism of various proposals made for 
                  implementations of these predicates (in particular 
                  of {\em setof\/}) in current Prolog 
                  systems. Foundational companion to section 5, on 
                  solution collecting predicates, in 
                  \cite{BoeRos94}. Also issued as {\em 
                  Prolog. Copenhagen papers 2}, ISO/IEC JTC1 SC22 WG17 
                  Standardization report no. 105, National Physical 
                  Laboratory, Middlesex, 1993, pp. 33-42"  
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@InCollection{BoeRos94, 
  author =       "E. B{\"o}rger and D. Rosenzweig", 
  title =        "{A Mathematical Definition of Full Prolog}", 
  booktitle =    "Science of Computer Programming", 
  publisher =    "North-Holland",
  year =         "1994", 
  pages =         "249-286",
  volume =        "24",
  noteNOT =         "\medskip \newline An abstract ASM 
                  specification of the semantics of Prolog, rigorously 
                  defining the international ISO 1995 Prolog standard 
                  by stepwise refinement. Revised and 
                  final version of 
                  \cite{Boerger90a,Boerger90b,BoeDas90,BoeRos91c}. An 
                  abstract of this was issued as {\em Full Prolog 
                  in a Nutshell} in {\em Logic Programming\/} 
                  (Proceedings of the 10th International Conference on 
                  Logic Programming) (D. S. Warren, Ed.), MIT Press
		  1993.  A preliminary version appeared under the
		  title {\em A Simple Mathematical Model for Full
		  Prolog} as research report TR-33/92, Dipartimento di
		  Informatica, Universit{\`a} di Pisa, 1992. "   
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@InCollection{BoeRos95, 
  author =       "E. B{\"o}rger and D. Rosenzweig", 
  title =        "{The WAM -- Definition and Compiler Correctness}", 
  booktitle =    "Logic Programming: Formal Methods and Practical
		  Applications",  
  series =       "Studies in Computer Science and Artificial Intelligence",
  publisher =    "North-Holland", 
  year =         "1994", 
  editor =       "C. Beierle and L. Pl{\"u}mer",
  chapter =      2,
  pages    =     "20-90",
  noteNOT =         "\medskip \newline Substantial example of the 
                  successive refinement method in the area, improving 
                  \cite{Boerger90a,Boerger90b,Boerger92} and the 
                  direct predecessors \cite{BoeRos91b,BoeRos92}. A 
                  hierarchy of ASMs provides a solid 
                  foundation for constructing provably correct 
                  compilers from Prolog to WAM.  Various refinement 
                  steps take care of different distinctive features 
                  (``orthogonal components'' in the authors' metaphor) 
                  of WAM making the specification as well as the 
                  correctness proof modular and extendible; examples 
                  of such extensions are found in 
                  \cite{BeiBoe96b,BeiBoe96a,BoeSal94,Araujo97,Kwon97}.
		  An extension of this work to an imperative language 
		  with parallelism and non determinism has been
		  provided in \cite{BoeDur96}. See
		  \cite{Ahrendt95,Pusch96,SchAhr97} for machine checked
		  versions of the correctness proofs (for some of) the
		  refinement steps. A preliminary version appeared as
		  Research Report TR-14/92, Dipartimento di
		  Informatica, Universit{\`a} di Pisa, 1992." 
} 
		  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@InCollection{BoeSal94, 
  author =       "E. B{\"o}rger and R. Salamone", 
  title =        "{CLAM Specification for Provably Correct Compilation 
                  of CLP(${\cal R}$) Programs}", 
  booktitle =    "Specification and Validation Methods", 
  publisher =    "Oxford University Press", 
  year =         "1995", 
  pages =        "97-130",
  editor =       "E. B{\"o}rger", 
  noteNOT =         "\medskip \newline Extends the 
                  B{\"o}rger--Rosenzweig's specification and 
                  correctness proof, for compiling Prolog programs to 
                  the WAM \cite{BoeRos95}, to CLP(${\cal R}$) and the 
                  constraint logical arithmetical machine (CLAM) 
                  developed at IBM Yorktown Heights.  For full proofs,
		  see R.~Salamone, ``Una Specifica Astratta e Modulare
		  della {CLAM} (An Abstract and Modular Specification
		  of the CLAM)'', Master's Thesis, Universit{\`a} di
		  Pisa, Italy, 1993."
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@InProceedings{BoeSch91, 
  author =       "E. B{\"o}rger and P. Schmitt", 
  title =        "{A Formal Operational Semantics for Languages of 
                  Type Prolog III}", 
  editor =       "E. B{\"o}rger and H. {Kleine B{\"u}ning} and 
                  M. M. Richter and W. Sch{\"o}nfeld", 
  volume =       "533", 
  series =       "LNCS", 
  pages =        "67-79", 
  booktitle =    "CSL'90, 4th Workshop on Computer Science Logic", 
  year =         "1991", 
  publisher =    "Springer", 
  noteNOT =         "\medskip \newline An ASM formalization 
                  of Alain Colmerauer's constraint logic programming 
                  language Prolog III, obtained from the Prolog model 
                  in \cite{Boerger90a,Boerger90b,Boerger92} through 
                  extending unifications by constraint systems. This 
                  extension was the starting point for the extension 
                  of \cite{BoeRos95} in \cite{BeiBoe92}. A 
                  preliminary version of this was issued as IBM 
                  Germany IWBS Report 144, 1990."  
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@article{BoeSch97,
  author =       {E. B\"{o}rger and P. Schmitt},
  title  =       {{A Description of the Tableau Method Using Abstract
		  State Machines}}, 
  journal =      {J. Logic and Computation},
  volume =       {7},
  number =       {5},
  pages =        {661--683},
  year =         {1997},
  noteNOT =         {\medskip \newline Starting from the textbook
		  formulation of the tableau calculus, the authors 
 		  give an operational description of the tableau
		  method in terms of ASMs at various levels of
		  refinement ending after four stages at a
		  specification that is very close to the 
		  {\mbox{{\sf lean}$T^{\!\!\textstyle
		  A}\!\!P$}}~implementation of the tableau calculus in
		  Prolog. Proofs of correctness and completeness of
		  the refinement steps are given.}
}
	  
		  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@InCollection{BoeSch98a,
  author = 	 {E. B\"orger and W. Schulte},
  title = 	 {{Programmer Friendly Modular Definition of the
		  Semantics of Java}},
  booktitle = 	 {{Formal Syntax and Semantics of Java}},
  publisher =	 {Springer},
  year =	 {1998},
  editor =	 {J. Alves-Foss},
  series =	 {LNCS},
  number =       {1523},
  noteNOT =	 {\medskip \newline Provides a system and machine
		  independent definition of the semantics of the full
		  programming language Java as it is seen by the Java
		  programmer.  The definition is modular, coming as a
		  series of refined ASMs, dealing in succession with
		  Java's imperative core, its object oriented
		  features, exceptions and threads.  Streamlined,
                  corrected, and completed in \cite{StScBo01}.   An
		  extended abstract has been presented to the IFIP WG
		  2.2 (University of Graz, 22.-26.9.1997) by
		  E.B\"orger and under the title {\em Modular Dynamic
		  Semantics of Java} to the Workshop on Programming
		  Languages (Ahrensdorp, FEHMARN island, September 25,
		  1997) by W. Schulte, see University of Kiel,
		  Dept. of CS Research Report Series, TR {\em
		  Arbeitstagung Programmiersprachen} 1997. }  
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{BoeSch98c,
  author = 	 {E. B\"orger and W. Schulte},
  title = 	 {{Defining the Java Virtual Machine as Platform for 
                   Provably Correct Java Compilation}}, 
  booktitle = 	 {{Mathematical Foundations of Computer Science 1998,
                  23rd International Symposium, MFCS'98, Brno, Czech
                  Republic}}, 
  editor =	 {{L. Brim and J. Gruska and J. Zlatuska}},
  number =	 {1450},
  series =	 {LNCS},
  year =	 {1998},
  publisher =	 {Springer},
  month =	 {August},
  noteNOT =	 {\medskip \newline A definition of the Java Virtual
                  Machine, along with a provably correct compilation
                  scheme for Java programs to the JVM, based on the
                  ASM semantics for Java presented in
                  \cite{BoeSch98a}.  Streamlined, corrected, and
                  completed in \cite{StScBo01}.  Full version appears
                  as Technical Report, Universit\"at Ulm, Fakult\"at
                  f\"ur Informatik, Ulm, Germany, 1998.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{BoeSch99,
  author = 	 {E. B\"orger and W. Schulte},
  title = 	 {{Initialization Problems for Java}},
  journal = 	 {{Software -- Concepts and Tools}},
  year = 	 {1999},
  volume =	 {20},
  number =	 {4},
  noteNOT =	 {\medskip \newline The treatment of initialization of
                  classes and interfaces in Java and the Java Virtual
                  Machine is shown to have problems, both in the ASM
                  models of \cite{BoeSch98a,BoeSch98c} and in various
                  current implementations.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InCollection{BoeSch00a,
  author = 	 {E. B\"orger and W. Schulte},
  title = 	 {{Modular Design for the Java VM architecture}},
  booktitle = 	 {{Architecture Design and Validation Methods}},
  publisher =	 {Springer},
  year =	 {2000},
  pages =        {297--357},
  editor =	 {E. B\"orger},
  noteNOT =	 {\medskip \newline Provides a modular definition of the
 		  Java VM architecture, at different layers of
                  abstraction. The layers partly reflect the layers
		  made explicit in the specification of the Java
		  language in \cite{BoeSch98a}. The ASM model for JVM
		  defined here and the ASM model for Java defined in
		  \cite{BoeSch98a} provide a rigorous framework for a machine
		  independent mathematical analysis of the language
		  and of its implementation, including compilation
		  correctness conditions, safety and optimization issues.
                  Streamlined, corrected, and completed in \cite{StScBo01}.} 
}		  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{BoeSch00b,
  author = 	 {{E. B\"orger and W. Schulte}},
  title = 	 {{A Practical Method for Specification and Analysis
                  of Exception Handling: A Java/JVM Case Study}},
  journal = 	 {{IEEE Transactions on Software Engineering}},
  year = 	 {2000},
  volume =	 {26},
  number =	 {10},
  pages =	 {872--887},
  month =	 {October},
  noteNOT =	 {\medskip \newline ASM models for exception handling
                  in Java and the Java Virtual Machine (JVM) are given,
                  along with a compilation scheme for Java to JVM
                  code.  It is proven that corresponding runs of the
                  Java and JVM throw the same exceptions with
                  equivalent effect.  A different proof is offered in
                  \cite{StScBo01}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{BoeSch00c,
  author = 	 {{E. B\"orger and J. Schmid}},
  title = 	 {{Composition and Submachine Concepts for Sequential ASMs}},
  booktitle = 	 {{Computer Science Logic (Proceedings of CSL 2000)}},
  pages =	 {41--60},
  year =	 {2000},
  editor =	 {P. Clote and H. Schwichtenberg},
  volume =	 {1862},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT =	 {\medskip \newline Structuring concepts for
                  sequential composition (and iteration),
                  parameterization, and encapsulation in ASMs are presented.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{BoeSon01,
  author = 	 {E. B\"orger and D. Sona},
  title = 	 {{A Neural Abstract Machine}},
  journal = 	 {{Journal of Universal Computer Science}},
  year = 	 {2001},
  volume =	 {7},
  number =	 {11},
  pages =	 {1006-1023},
  noteNOT =	 {\medskip \newline In an attempt to capture the
                  fundamental features common to neural networks, a
                  parameterized Neural Abstract Machine (NAM) is
                  presented using ASMs. The major neural networks in
                  the literature can be described as natural
                  extensions or refinements of the NAM.  Announced in
                  \cite{Sona01}.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Book{BoeSta03,
  author =	 {E. B\"orger and R. St\"ark},
  title = 	 {{Abstract State Machines: A Method for High-Level
                  System Design and Analysis}},  
  publisher = 	 {Springer-Verlag},
  year = 	 {2003},
  noteNOT =	 {\medskip \newline A book-length introduction to
                  ASMs, addressed to software engineers, researchers,
                  lectueres, and students as both a handbook and an
                  instructional textbook.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{CamGur01,
  author = 	 {{C. Campbell and Y. Gurevich}},
  title = 	 {{Table ASMs}},
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {286-290},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline An extended abstract describing a
                  two-dimensional (or tabular) form for specifying ASMs.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@TechReport{CatHug99,
  author = 	 {S. Cater and J. Huggins},
  title = 	 {{An ASM Dynamic Semantics for Standard ML}},
  institution =  {Kettering University},
  year = 	 {1999},
  type =	 {Technical Report},
  number =	 {CPSC-1999-2},
  month =	 {October},
  noteNOT =	 {\medskip \newline ASMs are used to provide dynamic
                  semantics for the functional programming language
                  Standard ML.  An extended abstract appears in
                  Y. Gurevich, P. Kutter, M. Odersky, and L. Thiele,
                  eds., "Abstract State Machines: Theory and
                  Applications", Springer LNCS 1912, 2000, 203-222,
                  and in TIK-Report 87, Swiss Federal Institute of
                  Technology (ETH) Zurich, March 2000, 68--99.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{CavRic01,
  author = 	 {{A. Cavarra and E. Riccobene}},
  title = 	 {{Simulating UML Statecharts}},
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {224-227},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline A description of a simulator for
                  UML Statecharts, based on the ASM model of
                  \cite{BoCaRi00b} and implemented in AsmGofer.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{CohSli00,
  author = 	 {{J. Cohen and A. Slissenko}},
  title = 	 {{On Verification of Refinements of Asynchronous
                  Timed Distributed Algorithms}},  
  booktitle = 	 {{Abstract State Machines: Theory and Applications}},
  pages =	 {34--49},
  year =	 {2000},
  editor =	 {{Y. Gurevich and P. Kutter and M. Odersky and L. Thiele}},
  volume =	 {1912},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT = 	 {\medskip \newline A study on verifying refinements
                  of real-time distributed asynchronous algorithms,
                  specified using ASMs.  The Bakery Algorithm
                  \cit{BoGuRo94} is used as a case study.  Also
                  appears in TIK-Report 87, Swiss Federal Institute
                  of Technology (ETH) Zurich, March 2000, 100--114.
                  Continued in \cite{CohSli01}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{CohSli01,
  author = 	 {{J. Cohen and A. Slissenko}},
  title = 	 {{On Refinements of Timed Abstract State Machines}},
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {247-250},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline A continuation of \cite{CohSli00},
                  looking at refinements of timed algorithms from a
                  more general viewpoint.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@TechReport{CoGuHS00,
  author = 	 {K. Compton and Y. Gurevich and J. Huggins and W. Shen},
  title = 	 {{An Automatic Verification Tool for UML}},
  institution =  {EECS Department, University of Michigan},
  year = 	 {2000},
  type =	 {Technical Report},
  number =	 {CSE-TR-423-00},
  noteNOT =	 {\medskip \newline ASMs are used to give semantics
                  for UML state machines, as a basis for constructing
                  an automated tool for verifying properties of UML
                  state machines.  An extended abstract appears as "A
                  Semantic Model for the State Machine in the Unified
                  Modeling Language" in G. Reggio, A. Knapp, B. Rumpe,
                  B. Selic, and R. Wieringa, eds., "Dynamic Behaviour
                  in UML Models: Semantic Questions", Workshop
                  Proceedings, UML 2000 Workshop,
                  Ludwig-Maximilians-Universit\"at M\"unchen, Institut
                  f\"ur Informatik, Bericht 0006, October 2000,
                  25-31.}  
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{CoHuSh00,
  author = 	 {K. Compton and J. Huggins and W. Shen},
  title = 	 {{A Semantic Model for the State Machine in the Unified
                  Modeling Language}},
  booktitle = 	 {{Proceedings of UML 2000 Workshop}},
  pages =	 {25--31},
  year =	 {2000},
  editor =	 {{G. Reggio and A. Knapp and B. Rumpe and B. Selic,
                  and R. Wieringa}},
  number =	 {0006},
  series =	 {{Institut f\"ur Informatik Bericht}},
  month =	 {October},
  organization = {{Ludwig-Maximilians-Universit\"at M\"unchen}},
  noteNOT =	 {\medskip \newline An extended abstract describing an ASM
                  model for UML state machines \cite{CoGuHS00}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{DelCastillo99,
  author = 	 {G. {Del Castillo}},
  title = 	 {{Towards Comprehensive Tool Support for Abstract
                  State Machines}},
  booktitle = 	 {{Applied Formal Methods --- FM-Trends 98}},
  pages =	 {311--325},
  year =	 {1999},
  editor =	 {D. Hutter and W. Stephan and P. Traverso and M. Ullmann},
  volume =	 {1641},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT =	 {\medskip \newline A description of the ASM
                  Workbench, an integrated environment for various ASM
                  tools.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{DeDuGl96,
  author = 	 {G.~{Del Castillo} and I.~Durdanovi\'c and
		  U.~Gl\"asser}, 
  title = 	 {{An Evolving Algebra Abstract Machine}},
  booktitle = 	 {{\em Proceedings of the Annual
		  Conference of the European Association for Computer Science
                  Logic (CSL'95)}\/},
  editor =	 {H.~Kleine B{\"u}ning},
  volume =       1092,
  series =	 {LNCS},
  year =	 1996,
  publisher =	 {Springer},
  pages =	 {191-214},
  noteNOT =         {\medskip \newline Introduces the concept of an 
		  abstract machine ({\small EAM\/}) as a platform for
		  the systematic development of ASM tools and gives a formal
		  definition of the {\small EAM\/} ground model in terms of a
		  universal ASM. A preliminary version appeared under
		  the title {\em Specification and Design of the EAM
		  (EAM - Evolving Algebra Abstract Machine)} as
		  Technical Teport tr-rsfb-96-003, Paderborn
		  University, 1996.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{DelGla00,
  author = 	 {G. {Del Castillo} and U. Gl\"asser},
  title = 	 {{Computer-Aided Analysis and Validation of
                  Heterogeneous System Specifications}},
  booktitle = 	 {{Computer Aided Systems Theory: Proceedings of the
                  7th International Workshop on Computer Aided Systems
                  Theory (EUROCAST'99)}},
  pages =	 {55--79},
  year =	 {2000},
  editor =	 {F. Pichler and R. Moreno-Diaz and P. Kopacek},
  volume =	 {1798},
  series =	 {LNCS},
  publisher =	 {Springer},
  noteNOT =	 {\medskip \newline ASMs are proposed as a methodology
                  for combining heterogeneous specifications.  As a case
                  study, Petri-net and SDL specifications of a
                  material flow system are combined using ASMs and
                  validated using SMV \cite{DelWin00}.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{DelWin00,
  author = 	 {G. {Del Castillo} and K. Winter},
  title = 	 {{Model Checking Support for the ASM High-Level Language}},
  booktitle = 	 {Proceedings of the 6th International Conference TACAS 2000},
  pages =	 {331--346},
  year =	 {2000},
  editor =	 {S. Graf and M. Schwartzbach},
  volume =	 {1785},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT =	 {\medskip \newline The authors introduce an interface
                  from the ASM Workbench to the SMV model checking
                  tool, based on an ASM-to-SMV transformation.
                  Previously appeared as Universit\"at-GH Paderborn
                  Technical Report TR-RI-99-209.  An
                  extension of \cite{Winter97}; for an extension see
                  \cite{Winter00}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@Article{DeDoGu97,
  author = 	 {S. Dexter and P. Doyle and Y. Gurevich},
  title = 	 {{Gurevich Abstract State Machines and Sch\"onhage
		  Storage Modification Machines}},
  journal = 	 {Journal of Universal Computer Science},
  year = 	 {1997},
  volume =	 {3},
  number =	 {4},
  pages =	 {279-303},
  noteNOT =	 {\medskip \newline A demonstration that, in a strong
		  sense, Schoenhage's storage modification machines
		  are equivalent to unary basic ASMs without external
		  functions.  The unary restriction can be removed if
		  the storage modification machines are equipped with
		  a pairing function in an appropriate way.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{DelHar98,
  author = 	 {G. {Del Castillo} and W. Hardt},
  title = 	 {{Towards a Unified Analysis Methodology of HW/SW
                   Systems based on Abstract State Machines: 
                   Modelling of Instruction Sets}},
  booktitle = 	 {Proceedings of the GI/ITG/GMM Workshop "Methoden und 
                  Beschreibungssprachen zur Modellierung und
                  Verifikation von Schaltungen und Systemen"},
  year = 	 {1998},
  publisher =	 {Paderborn},
  noteNOT =	 {\medskip \newline ASMs are used for high-level
                  analysis of hardware/software systems.  The authors
                  show how to model instruction sets and instrument
                  such models to collect data for evaluating 
                  design alternatives.  For a discussion of experimental
                  results, see Proceedings of the Sixth International 
                  Workshop on Hardware/Software Codesign (CODES/CASHE'98),
                  Seattle, Washington, March 15-18, 1998, pp. 77-81.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@InProceedings{Diehl97,
  author = 	 {S. Diehl},
  title = 	 {{Transformations of Evolving Algebras}},
  booktitle = 	 {{Proceedings of LIRA'97 (VIII International
		  Conference on Logic and Computer Science)}},
  year =	 {1997},
  address =	 {Novi Sad, Yugoslavia},
  month =	 {September},
  pages =	 {43-50},
  noteNOT =	 {\medskip \newline First, constant propagation is
 		  defined as a transformation on ASMs. Then ASMs are
 		  extended by macro definitions and folding and
 		  unfolding transformations for macros are
 		  defined. Next a simple transformation to flatten
 		  transition rules is introduced. Finally a pass
 		  separation transformation for ASMs is presented.
  		  For all transformations the operational equivalence
 		  of the resulting ASMs with the original ASMs is
 		  proven. In the case of pass separation, it is shown
 		  that the results of the computations in the original
 		  and the transformed ASMs are equal. Next pass
 		  separation is applied to a simple
 		  interpreter. Finally a comparison to other work is
 		  given.  A preliminary version appeared in 1995 as
		  Technical Report 02/95 of Universit{\"a}t des
		  Saarlandes.}  
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@PhdThesis{Diesen95,
  author = 	 {D. Diesen},
  title = 	 {{Specifying Algorithms Using Evolving Algebra.
		  Implementation of Functional Programming Languages}},
  school = 	 {Dept. of Informatics, University of Oslo},
  year = 	 {1995},
  address =	 {Norway},
  type =	 {Dr. Scient. Degree Thesis},
  month =	 {March},
  noteNOT =	 {\medskip \newline A description of a functional
		  interpreter for ASMs, with applications for
		  functional programming languages, along with
		  proposed extension to the language of ASMs.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@MastersThesis{DiFranco97,
  author = 	 {{B. DiFranco}},
  title = 	 {{Specification of ISO SQL using Montages}},
  school = 	 {Universit\`a di l'Aquila},
  year = 	 {1997},
  noteNOT = 	 {\medskip \newline (In Italian.)  A specification
		  of the query language SQL using Montages
		  \cite{KutPie97a}.}
}		  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@TechReport{DiBig00,
  author = 	 {V. {Di Iorio} and R. Bigonha},
  title = 	 {{An ASM Implementation of a Self-Applicable Partial
                  Evaluator}}, 
  institution =  {Programming Languages Laboratory, DCC, Universidade
                  Federal de Minas Gerais},
  year = 	 {2000},
  type =	 {Technical Report},
  number =	 {LLP-004-2000},
  noteNOT =	 {\medskip \newline A partial evaluator for ASM
                  written using ASMs is presented in detail.  A
                  discussion of the work appears in \cite{DiBiMa00}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{DiBiMa00,
  author = 	 {V. {Di Iorio} and R. Bigonha and M. Maia},
  title = 	 {{A Self-Applicable Partial Evaluator for ASM}},
  booktitle = 	 {{Abstract State Machines -- ASM 2000, International
                  Workshop on Abstract State Machines, Monte Verita,
                  Switzerland, Local Proceedings}},
  pages =	 {115-130},
  year =	 {2000},
  editor =	 {Y. Gurevich and P. Kutter and M. Odersky and L. Thiele},
  number =       {87},
  series =	 {TIK-Report},
  month =	 {March},
  organization = {Swiss Federal Institute of Technology (ETH) Zurich},
  noteNOT = 	 {\medskip \newline A partial evaluator for ASMs is
                  described which is self-applicable (i.e. capable of
                  being applied to itself).  The use of such a tool
                  for compiler generation and techniques for
                  describing language semantics suitable for partial
                  evaluation are discussed.  Extends the work of
                  \cite{GurHug94}; for implementation details see
                  \cite{DiBig00}.}  
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@TechReport{Dold98,
  author = 	 {A. Dold},
  title = 	 {{A Formal Representation of Abstract State Machines
                  Using PVS}},
  institution =  {Universit\"at Ulm},
  year = 	 {1998},
  type =	 {Verifix Technical Report},
  number =	 {Ulm/6.2},
  month =	 {July},
  noteNOT =	 {\medskip \newline A technique for formally
                  representing ASMs using the automated verification
                  system PVS is described, along with generic PVS
                  theories which define refinement relations between ASMs.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{DoGaVZ98}
  author = 	 {A. Dold and T. Gaul and V. Vialard and W. Zimmerman},
  title = 	 {{ASM-Based Mechanized Verification of Compilter Back-Ends}},
  booktitle = 	 {Proceedings of the 28th Annual Conference of the
                  German Society of Computer Science},
  year =	 {1998},
  publisher =	 {Technical Report, Magdeburg University},
  noteNOT =	 {\medskip \newline Using techniques described in
                  \cite{ZimGau97}, an approach for mechanically
                  proving the correctness of back-end rewrite system
                  (BURS) specifications is described.  This approach
                  can be used in conjunction with BURS-based back-end
                  compiler generators.   PVS is used to perform the
                  mechanical verification.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  		  
@InProceedings{Durand98,
  author = 	 {A. Durand},
  title = 	 {{Modeling Cache Coherence Protocol -- A Case Study
                  with FLASH}},  
  booktitle = 	 {Proceedings of the 28th Annual Conference of the
                  German Society of Computer Science},
  year =	 {1998},
  publisher =	 {Technical Report, Magdeburg University},
  noteNOT =	 {\medskip \newline A specification and proof of
                  correctness of the cache coherence protocol in the
                  Stanford FLASH multiprocessor system.  For a model
                  checking verification using SMV see \cite{Winter00}.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Eschbach99,
  author = 	 {R. Eschbach},
  title = 	 {{A Termination Detection Algorithm: Specification
                  and Verification}},
  booktitle = 	 {Proceedings of FM'99},
  editor =	 {J. Wing and J. Woodcock and J. Davies},
  volume =	 {II},
  number =	 {1709},
  series =	 {LNCS},
  year =	 {1999},
  publisher =	 {Springer-Verlag},
  pages =	 {1720-1737},
  noteNOT =	 {\medskip \newline A two-level specification of a
                  distributed termination detection algorithm is
                  given using ASMs.  The lower-level specification of
                  the algorithm is proved equivalent to the
                  upper-level specification.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Eschbach01,
  author = 	 {{R. Eschbach}},
  title = 	 {{Derivation of a Termination Detection Algorithm
                  using Abstract State Machines}},
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {279-280},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline An announcement of a case study
                  modeling the derivation of a termination detection
                  algorithm of Dijkstra and Scholten, and its proof of
                  correctness, using ASMs with partially ordered runs.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{EsGlGP00,
  author = 	 {R. Eschbach and U. G\"asser and R. Gotzhein and A. Prinz},
  title = 	 {{On the Formal Semantics of SDL-2000: A
                  Compilation Approach Based on an Abstract SDL Machine}},
  booktitle = 	 {{Abstract State Machines: Theory and Applications}},
  pages =	 {242--265},
  year =	 {2000},
  editor =	 {{Y. Gurevich and P. Kutter and M. Odersky and L. Thiele}},
  volume =	 {1912},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT = 	 {\medskip \newline An overview of the semantics of
                  SDL-2000, whose official semantics is defined using
                  ASMs.  A simplified language SPL is defined and
                  described using ASMs to point out some of the unique
                  features of the semantics of SDL-2000.  Also in
                  TIK-Report 87, Swiss Federal Institute of Technology
                  (ETH) Zurich, March 2000, 131--151.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{EsGGLP01a,
  author = 	 {{R. Eschbach and U. Gl\"asser and R. Gotzhein and
                  M. von L\"owis and A. Prinz}},
  title = 	 {{The Formal Semantics of SDL-2000: Compiling and
                  Running SDL Specifications on ASM Models}},
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {216-219},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline A report on progress made in
                  modeling SDL-2000 as an ASM and its formal
                  endorsement by ITU.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@Article{EsGGLP01b,
  author = 	 {{R. Eschbach and U. Gl\"asser and R. Gotzhein and
                  M. von L\"owis and A. Prinz}},
  title = 	 {{Formal Definition of SDL-2000: Compiling and
                  Running SDL Specifications as ASM Models}},
  journal = 	 {{Journal of Universal Computer Science}},
  year = 	 {2001},
  volume =	 {7},
  number =	 {11},
  pages =	 {1024-1049},
  noteNOT =	 {\medskip \newline A discussion of fundamental
                  questions concerning practicability, adequacy and
                  maintainability of the ASM formalization of
                  SDL-2000, including insights into the formal
                  semantics definition and several effects on the SDL
                  standard.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{FoAbYe97,
  author = 	 {B. Fordham and S. Abiteboul and Y. Yesha},
  title = 	 {{Evolving Databases: An Application to Electronic Commerce}},
  booktitle = 	 {{Proceedings of the Interational Database Engineering
		  and Applications Symposium (IDEAS)}},
  year =	 {1997},
  month =	 {August},
  noteNOT =	 {\medskip \newline The authors present a rich and
 		  extensible database model called "evolving
 		  databases" (EDB), with a rich and precise semantics
 		  based on ASMs.  The authors apply EDBs to electronic
 		  commerce applications.}  
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@TechReport{FruSta03,
  author = 	 {N. Fruja and R. St\"ark},
  title = 	 {{The Hidden Computation Steps of Turbo Abstract
                  State Machines}}, 
  institution =  {{ETH Z\"urich}},
  year = 	 {2003},
  type =	 {Theoretical Computer Science Technical Report},
  number =	 {416},
  month =	 {July},
  noteNOT =	 {\medskip \newline An analysis of the hidden
                  intermediate steps of Turbo ASMs \cite{BoeSch00c} in
                  terms of PAR/SEQ trees, including problems with the
                  reserve.  Extended abstract appeared in Proceedings
                  of ASM 2003, Springer LNCS 2589, 2003, 244-262.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@MastersThesis{Gaieb97,
  author = 	 {M. Gaieb},
  title = 	 {{G{\'e}neration de sp{\'e}cifications Centaur {\'a}
		  partir de specifications Montages}}, 
  school = 	 {Universit\'e de Nice -- Sophia Antipolis},
  year = 	 {1997},
  type =	 {Master's Thesis},
  month =	 {June},
  noteNOT =	 {\medskip \newline This works investigate the
		  possibilities of mapping the operational ASM
		  semantics of the static analysis phase of Montages
		  \cite{KutPie97a} into the declarative Natural
		  Semantics framework.   A formalization for the
		  list arrows of Montages is found --- a feature that
		  has not been fully formalized in \cite{KutPie97a}.
		  In addition, the Gem-Mex Montages tool is
		  interfaced to the Centaur system (which executes
		  Natural Semantics specificaions), and the tool
		  suport of Centaur is exploited in order to generate
		  structural editors for languages defined with Montages.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@TechReport{Gaul95,
  author = 	 {T. Gaul},
  title = 	 {{An Abstract State Machine specification of the
                  DEC-Alpha Processor Family}},
  institution =  {University of Karlsruhe},
  year = 	 {1995},
  type =	 {Verifix Working Paper},
  number =	 {[Verifix/UKA/4]},
  noteNOT =         {\medskip \newline An ASM for the DEC-Alpha processor
		  family, derived directly from the original
		  manufacturer's handbook.  The specification omits
		  certain less-used instructions and VAX compatibility
		  parts.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@TechReport{GaHeZi98,
  author = 	 {T. Gaul and A. Heberle and W. Zimmermann},
  title = 	 {{An ASM Specification of the
                  Operational Semantics of MIS}},
  institution =  {University of Karlsruhe},
  year = 	 {1998},
  type =	 {Verifix Working Paper},
  number =	 {Verifix/UKA/3},
  noteNOT =	 {\medskip \newline An ASM specification of MIS, an
                  intermediate programming language used in the
                  Verifix project for provably correct compilation to
                  the DEC-Alpha microprocessor.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{GarRic00,
  author = 	 {A. Gargantini and E. Riccobene},
  title = 	 {{Encoding Abstract State Machines in PVS}},
  booktitle = 	 {{Abstract State Machines: Theory and Applications}},
  pages =	 {303--322},
  year =	 {2000},
  editor =	 {{Y. Gurevich and P. Kutter and M. Odersky and L. Thiele}},
  volume =	 {1912},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT = 	 {\medskip \newline A framework for automatic
                  translation from ASM to the PVS specification and
                  verification system is presented.  The ASM
                  specification of the Production Cell problem
                  \cite{BoeMea97} is used as a case study.
                  Also appears in TIK-Report 87, Swiss Federal
                  Institute of Technology (ETH) Zurich, March 2000,
                  152--173.}  
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{GarRic01a,
  author = 	 {{A. Gargantini and E. Riccobene}},
  title = 	 {{ASM-based Testing: coverage criteria and automatic
                  tests generation}},
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {262-265},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline The problem of using ASMs in
                  specification-based testing is discussed.
                  Definitions for coverage criteria are given, and
                  methods for automatically generating tests via a
                  model checker are presented.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{GarRic01b,
  author = 	 {A. Gargantini and E. Riccobene},
  title = 	 {{ASM-based Testing: Coverage Criteria and Automatic
                  Test Sequence Generation}},
  journal = 	 {{Journal of Universal Computer Science}},
  year = 	 {2001},
  volume =	 {7},
  number =	 {11},
  pages =	 {1050-1067},
  noteNOT =	 {\medskip \newline A set of adequacy criteria for ASM
                  specifications is defined, which measures the coverage
                  achieved by a test suite and determines whether
                  sufficient testing has been performed. A method to
                  automatically generate from ASM specifications test
                  sequences which accomplish a desired coverage is
                  presented.  ASMs are used as test oracles to predict
                  the expected outputs of units under test.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Gervasi01,
  author = 	 {V. Gervasi},
  title = 	 {{Synthesizing ASMs from Natural Language Requirements}},
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {212-215},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline A report on the automatic
                  synthesis of ASM models from natural language
                  descriptions of a system.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@TechReport{GiKeSc97,
  author = 	 {M. Giese and D. Kempe and A. Sch\"onegge},
  title = 	 {{KIV zur Verifikation von ASM-Spezifikationen am
                  Beispiel der DLX-Pipelining Architektur}},
  institution =  {Universit\"at Karlsruhe},
  year = 	 {1997},
  type =	 {Interner Bericht},
  number =	 {16/97},
  noteNOT =	 {\medskip \newline (In German.) The KIV system (Karlsruhe
                  Interactive Verifier) is used for the formal
                  verification of the ASM specification of the DLX
                  pipelining architecture in \cite{BoeMaz97}.  Details
                  of the verification and estimates of the amount of
                  work required are given, along with several minor
                  shortcomings of the original specification.  Two
                  additions to the KIV system are described which were
                  designed in the course of this case study. }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InProceedings{Glaesser96,
  author = 	 {U.~Gl\"asser},
  title = 	 {{Systems Level Specification and Modelling of Reactive
                  Systems: Concepts, Methods, and Tools}},
  booktitle = 	 {Computer Aided Systems Theory--EUROCAST'95: {\em
		  Proc.~of the Fifth International Workshop on
		  Computer Aided Systems Theory (Innsbruck, Austria,
		  May 1995})}, 
  editor =	 {F.~Pichler, R.~Moreno Diaz and R.~Albrecht},
  volume =	 1030,
  series =	 {LNCS},
  year =	 1996,
  publisher =	 {Springer},
  pages =	 {375-385},
  noteNOT =         {\medskip \newline The paper investigates the
		  derivation of formal requirements and design
		  specifications at systems level as part of a
		  comprehensive design concept for complex reactive
		  systems. In this context the meaning of correctness
		  with respect to the embedding of mathematical models
		  into the physical world is discussed.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@incollection{Glaesser97,
  author = 	  "U. Gl{\"a}sser",
  title = 	  "{Combining Abstract State Machines with Predicate
		Transition Nets}",
  editor = 	  "F.~Pichler and R.~Moreno--D\'{\i}az",
  booktitle = 	  "{Computer Aided Systems Theory--EUROCAST'97
		  (Proc.~of the 6th International Workshop on Computer
		  Aided Systems Theory, Las Palmas de Gran Canaria,
		  Spain, Feb.~1997)}", 
  publisher = 	  "Springer",
  series =        "{LNCS}",
  volume = 	  1333,
  year = 	  1997,
  pages = 	  "108-122",
  noteNOT = 	 {\medskip \newline The work  investigates the formal
		  relation between ASMs and Pr/TPredicate Transition
		  (Pr/T-) Nets with the aim to integrate both
		  approaches into a common framework for modeling
		  concurrent and reactive system behavior, where
		  Pr/T-nets are considered as a graphical interface
		  for distributed ASMs. For the class of {\em strict
		  Pr/T-nets} (which constitutes the basic form of
		  Pr/T-nets) a transformation to distributed ASMs is given.}
}		  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@InProceedings{GlGoPr99,
  author = 	 {U. Gl\"asser and R. Gotzhein and A. Prinz},
  title = 	 {{Towards a New Formal SDL Semantics Based on
                  Abstract State Machines}},
  booktitle = 	 {{SDL'99 - The Next Millenium, Proceedings of the 9th
                  SDL Forum}},  
  year =	 {1999},
  publisher =	 {Elsevier Science B.V.},
  noteNOT =	 {\medskip \newline ASMs are applied to define the
                  behavior model of a sample SDL-2000 specification.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@TechReport{GlGuVe01,
  author = 	 {{U. Gl\"asser and Y. Gurevich and M. Veanes}},
  title = 	 {{Universal Plug and Play Models}},
  institution =  {Microsoft Research},
  year = 	 {2001},
  type =	 {Technical Report},
  number =	 {MSR-TR-2001-59},
  month =	 {June},
  noteNOT =	 {\medskip \newline An ASM specification of the
                  Universal Plug and Play (UPnP) architecture for
                  peer-to-peer network connectivity of intelligent devices.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@TechReport{GlGuVe02,
  author = 	 {U. Gl\"asser and Y. Gurevich and M. Veanes},
  title = 	 {{An Abstract Communication Model}},
  institution =  {Microsoft Research},
  year = 	 {2002},
  type =	 {Technical Report},
  number =	 {MSR-TR-2002-55},
  month =	 {May},
  noteNOT =	 {\medskip \newline An abstract model for
                  communication networks is presented in AsmL, with
                  applications to UPnP \cite{GlGuVe01} and XLANG.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@Article{GlaKar97,
   author =       {U. Gl\"asser and R. Karges},
   title =        {{Abstract State Machine Semantics of SDL}},
   journal =      {Journal of Universal Computer Science},
   year =         {1997},
   volume =       {3},
   number =       {12},
   pages =        {1382-1414},
   noteNOT =         {\medskip \newline  A formal semantic model of Basic
		  SDL-92 -- according to the {\em ITU-T Recommendation
		  Z.100} -- is defined in terms of an abstract SDL
		  machine based on the concept of a {\em multi-agent
		  real-time ASM}. The resulting interpretation model
		  is not only mathematically precise but also reflects
		  the common understanding of SDL in a direct and
		  intuitive manner; it provides a {\em concise} and
		  {\em understandable} representation of the complete
		  dynamic semantics of Basic SDL-92. Moreover, the
		  model can easily be {\em extended} and{\em
		  modified}.  The article considers the
		  behavior of channels, processes and timers with
	          respect to signal transfer operations and timer
		  operations.} 
}		  
		  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 		  
@InCollection{GlaRos93, 
  author = 	 "P. Glavan and D. Rosenzweig",
  title =        "{Communicating Evolving Algebras}", 
  booktitle =    "Computer Science Logic",
  publisher =    "Springer", 
  year =         "1993", 
  editor =       "E. B{\"o}rger and H. {Kleine B{\"u}ning} and
		  G. J{\"a}ger and S. Martini and M. M. Richter",
  volume =       "702", 
  series =       "Lecture Notes in Computer Science", 
  pages =        "182-215", 
  noteNOT =         "\medskip \newline A theory of concurrent computation within
		  the framework of ASMs is developed, generalizing
		  \cite{GurMos90,BoeRic91,BoeRic92a,BoeRic92b}. As
		  illustration models are given for the Chemical
		  Abstract Machine and the $\pi$-calculus. See
		  \cite{Gurevich94b} for a more satisfactory definition
		  of the notion of distributed ASM runs."
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@InProceedings{GlaRos94, 
  author =       "P. Glavan and D. Rosenzweig", 
  title =        "{Evolving Algebra Model of Programming Language 
                  Semantics}", 
  editor =       "B. Pehrson and I. Simon", 
  volume =       "I: Technology/Foundations", 
  pages =        "416-422", 
  booktitle =    "IFIP 13th World Computer Congress", 
  year =         "1994", 
  address =      "Elsevier, Amsterdam, the Netherlands", 
  noteNOT =         "\medskip \newline Defines an ASM interpretation of 
                  many-step SOS, denotational semantics and Hoare 
                  logic for the language of while--programs and states
                  correctness and completeness theorems, based on 
                  a simple flowchart model of the language." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{GleZim01,
  author = 	 {{S. Glesner and W. Zimmermann}},
  title = 	 {{Structural Simulation Proofs based on ASMs even for
                  Non-Terminating Programs}},
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {235-238},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline A discussion of the problem of
                  proving the correctness of program transformations,
                  especially when the targets are non-terminating
                  programs.  Coinductive proofs based on ASMs are
                  introduced.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  

@InProceedings{GoHeLZ00,
  author = 	 {G. Goos and A. Heberle and W. L\"owe and W. Zimmermann},
  title = 	 {{On Modular Definitions and Implementations of
                  Programming Languages}},
  booktitle = 	 {{Abstract State Machines -- ASM 2000, International
                  Workshop on Abstract State Machines, Monte Verita,
                  Switzerland, Local Proceedings}},
  pages =	 {174-208},
  year =	 {2000},
  editor =	 {Y. Gurevich and P. Kutter and M. Odersky and L. Thiele},
  number =       {87},
  series =	 {TIK-Report},
  month =	 {March},
  organization = {Swiss Federal Institute of Technology (ETH) Zurich},
  noteNOT = 	 {\medskip \newline A formal composition and
                  refinement mechanism for state-transition systems is
                  presented.  Applications are made to language
                  semantic definitions using ASMs and Montages.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@InCollection{GoKaSc91, 
  author =       "G. Gottlob and G. Kappel and M. Schrefl", 
  title =        "{Semantics of Object-Oriented Data Models -- The 
                  Evolving Algebra Approach}", 
  booktitle =    "Next Generation Information Technology", 
  publisher =    "Springer", 
  year =         "1991", 
  editor =       "J. W. Schmidt and A. A. Stogny", 
  volume =       "504", 
  series =       "LNCS", 
  pages =        "144-160", 
  noteNOT =         "\medskip \newline Uses ASMs to define 
                  the operational semantics of object creation, of 
                  overriding and dynamic binding, and of inheritance 
                  at the type level (type specialization) and at the 
                  instance level (object specialization)." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{GooZim00,
  author = 	 {{G. Goos and W. Zimmermann}},
  title = 	 {{Verifiying Compilers and ASMs}},
  booktitle = 	 {{Abstract State Machines: Theory and Applications}},
  pages =	 {177--202},
  year =	 {2000},
  editor =	 {{Y. Gurevich and P. Kutter and M. Odersky and L. Thiele}},
  volume =	 {1912},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT =	 {\medskip \newline ASMs are used to describe
                  verifying compilers: compilers which verify the
                  correctness of their generated code.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{GraGur98,
  author = 	 {E. Gr\"adel and Y. Gurevich},
  title = 	 {{Metafinite Model Theory}},
  journal = 	 {{Information and Computation}},
  year = 	 {1998},
  volume =	 {140},
  number =	 {1},
  month =	 {10 January},
  pages =	 {26-81},
  noteNOT =	 {\medskip \newline A closer look reveals that
		  computer systems, {\em e.g.} databases, are not
		  necessarily finite because they may involve for
		  example arithmetic.  Motivated by such computer
		  science challenges and by ASM applications,
		  metafinite structures are defined and the approach
		  and methods of finite model theory are extended to
		  metafinite models.  The relevance to the ASM
		  methodology:\enspace ASM states are metafinite
		  structures.   An early version has been presented
		  under the title {\em Towards a Model Theory of
		  Metafinite Structures} to the Logic Colloquium 1994,
		  see the abstract in the {\em Journal of Symbolic
		  Logic}.  An intermediate version appeared in
                  {\em Logic and Computational Complexity, Selected Papers}, 
                  Springer LNCS 960, 1995, 313-366.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{GraSpi99,
  author = 	 {E. Gr\"adel and M. Spielmann},
  title = 	 {{Logspace Reducibility via Abstract State Machines}},
  booktitle = 	 {Proceedings of FM'99},
  editor =	 {J. Wing and J. Woodcock and J. Davies},
  volume =	 {II},
  number =	 {1709},
  series =	 {LNCS},
  year =	 {1999},
  publisher =	 {Springer-Verlag},
  pages =	 {1738-1757},
  noteNOT =	 {\medskip \newline ASMs are used to investigate
                  logspace reducibility among structures, capturing
                  the choiceless fragment of logspace.  A continuation
                  of \cite{BlGuSh99}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{GrGuSV01a,
  author = 	 {{W. Grieskamp and Y. Gurevich and W. Schulte and M. Veanes}},
  title = 	 {{Testing with Abstract State Machines}},
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {257-261},
  year =	 2001,
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =         {\medskip \newline An extended abstract of
                  \cite{GrGuSV01b} describing
                  testing of ASM specifications.  A finite state
                  machine is extracted from a nondeterministic ASM to
                  be used in conjunction with known test generation
                  techniques.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@TechReport{GrGuSV01b,
  author = 	 {{W. Grieskamp and Y. Gurevich and W. Schulte and M. Veanes}},
  title = 	 {{Generating Finite State Machines from Abstract
                  State Machines}},
  institution =  {Microsoft Research},
  year = 	 {2001},
  type =	 {Microsoft Research},
  number =	 {MSR-TR-2001-97},
  month =	 {October},
  noteNOT =	 {\medskip \newline An algorithm for deriving a
                  finite state machine from an ASM is given, including
                  hyperstates for infinite-state ASMs.  Announced in
                  \cite{GrGuSV01a}; revised May 2002.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{GroRen95,
  author = 	 {R. Groenboom and G. {Renardel de Lavalette}},
  title = 	 {{A Formalization of Evolving Algebras}},
  booktitle = 	 {Proceedings of Accolade95},
  year =	 {1995},
  organization = {Dutch Research School in Logic},
  noteNOT =	 {\medskip \newline The authors present the syntax and
 		  semantics for a Formal Language for Evolving Algebra
 		  (FLEA). This language is then extended to a
 		  multi-modal language FLEA' and it is sketched how we
 		  can transfer the axioms of the logic MLCM to
 		  FLEA'. MLCM is a Modal Logic of Creation and
 	          Modification based on QDL as presented by Harel.  }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@TechReport{Gurevich84,
  author = 	 {Y. Gurevich},
  title = 	 {{Reconsidering Turing's Thesis: Toward More Realistic
                   Semantics of Programs}},
  institution =  {{EECS Department, University of Michigan}},
  year = 	 {1984},
  type =	 {Technical Report},
  number =	 {CRL-TR-36-84},
  noteNOT =	 {\medskip \newline An attempt to reconsider Turing's
                  Thesis, taking into account that resources are
                  bounded.  The earliest known paper in which the
                  ideas behind ASMs began to take form.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@Article{Gurevich85,
  author = 	 {{Y. Gurevich}},
  title = 	 {{A New Thesis}},
  journal = 	 {{Abstracts, American Mathematical Society}},
  year = 	 {1985},
  month =	 {August},
  pages =	 {317},
  noteNOT =	 {\medskip \newline A follow-up to \cite{Gurevich84}.
                  "Every computational device can be simulated by an
                  appropriate dynamic structure -- of appropriately
                  the same size -- in real time".}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@InCollection{Gurevich88a, 
  author =       "Y. Gurevich", 
  title =        "{Logic and the Challenge of Computer Science}", 
  booktitle =    "Current Trends in Theoretical Computer Science", 
  publisher =    "Computer Science Press", 
  year =         "1988", 
  editor =       "E. B{\"o}rger", 
  pages =        "1-57", 
  noteNOT =         "\medskip \newline The introduction and the first use 
                  of ASMs (at the end of the paper)." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@InCollection{Gurevich88b, 
  author =       "Y. Gurevich", 
  title =        "{Algorithms in the World of Bounded Resources}", 
  booktitle =    "{The Universal Turing Machine -- A Half-Century Story}", 
  publisher =    "Oxford University Press", 
  year =         "1988", 
  editor =       "R. Herken", 
  pages =        "407-416", 
  noteNOT =         "\medskip \newline Early complexity theoretical 
                  motivation for the introduction of ASMs is 
                  discussed." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@Article{Gurevich91, 
  author =       "Y. Gurevich", 
  title =        "{Evolving Algebras. A Tutorial Introduction}", 
  journal =      "Bulletin of EATCS", 
  year =         "1991", 
  volume =       "43", 
  pages =        "264-284", 
  noteNOT =         "\medskip \newline The first tutorial on ASMs.
                  The ASM thesis is stated: Every algorithm 
                  can be simulated by an appropriate ASM 
                  in lock-step on the natural abstraction level of the 
                  algorithm. A slightly revised version of this was 
                  reprinted in G. Rozenberg and A. Salomaa Eds, {\em 
                  Current Trends in Theoretical Computer Science}, 
                  World Scientific, 1993, pp 266-292. For a more
                  advanced definition see \cite{Gurevich94b}." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@Article{Gurevich94a, 
  author =       "Y. Gurevich", 
  title =        "{Logic Activities in Europe}", 
  journal =      "ACM SIGACT News", 
  year =         "1994", 
  noteNOT =         "\medskip \newline A critical analysis of European 
                  logic activities in computer science. The part 
                  relevant to ASMs is subsection~4.6 
                  called Mathematics and Pedantics." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  

@InCollection{Gurevich94b, 
  author =       "Y. Gurevich", 
  title =        "{Evolving Algebras 1993: Lipari Guide}", 
  booktitle =    "Specification and Validation Methods", 
  publisher =    "Oxford University Press", 
  year =         "1995", 
  pages =        "9-36",
  editor =       "E. B{\"o}rger", 
  noteNOT =         "\medskip \newline The tutorial \cite{Gurevich91} 
                  covered basic ASMs. In the meantime, 
                  ASMs have been extensively used, in 
                  particular, for specifying parallel, distributed 
                  computations and computations involving real time. 
                  It became obvious that a more advanced definition of 
                  ASMs is needed.  The guide addresses this need.  For
		  a recent update {\em May 1997 Draft of the ASM
		  Guide} see the Technical Report CSE-TR-336-97, EECS
		  Dept., University of Michigan."  
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@InProceedings{Gurevich94c, 
  author =       "Y. Gurevich", 
  title =        "{Evolving Algebras}", 
  editor =       "B. Pehrson and I. Simon", 
  volume =       "I: Technology/Foundations", 
  pages =        "423-427", 
  booktitle =    "IFIP 13th World Computer Congress", 
  year =         "1994", 
  address =      "Elsevier, Amsterdam, the Netherlands", 
  noteNOT =         "\medskip \newline The opening talk at the first ASM
                  workshop.  Sections: Introduction, The ASM Thesis, 
                  Remarks, Future Work." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@Article{Gurevich00,
  author = 	 {Y. Gurevich},
  title = 	 {{Sequential Abstract State Machines Capture
                  Sequential Algorithms}},
  journal = 	 {ACM Transactions on Computational Logic},
  year = 	 {2000},
  month = 	 {July},
  volume = 	 {1},
  number = 	 {1},
  pages =        {77-111},
  noteNOT =	 {\medskip \newline The notion of ``sequential
                  algorithm'' is formalized and proved equivalent to
                  the notion of sequential ASMs.  A formal proof of
                  the sequential ASM Thesis (proposed in
                  \cite{Gurevich85,Gurevich91}.  An early version appeared
                  under different titles as 
                  Microsoft Research Technical Reports MSR-TR-99-09 and
                  MSR-TR-99-65, and in Bulletin of EATCS 67 (February
                  1999), 93-124.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Gurevich01,
  author = 	 {Y. Gurevich},
  title = 	 {{Logician in the land of OS: Abstract State Machines
                  at Microsoft}},
  booktitle = 	 {{Proceedings of the Sixteenth Annual IEEE Symposium
                  on Logic in Computer Science}},
  pages =	 {129-136},
  year =	 {2001},
  organization = {IEEE Computer Society},
  noteNOT =	 {\medskip \newline Analysis of foundational problems
                  like "What is computation?" leads to a sketch of the
                  paradigm of ASMs.  This is followed by a brief
                  discussion on ASM applications. Then some
                  theoretical problems that bridge between traditional
                  logic-in-CS themes and ASMs are presented.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InCollection{GurHug93, 
  author =       "Y. Gurevich and J. Huggins", 
  title =        "{The Semantics of the C Programming Language}", 
  booktitle =    "Computer Science Logic", 
  publisher =    "Springer", 
  year =         "1993", 
  editor =       "E. B{\"o}rger and H. {Kleine B{\"u}ning} and 
                  G. J{\"a}ger and S. Martini and M. M. Richter", 
  volume =       "702", 
  series =       "LNCS", 
  pages =        "274-309", 
  noteNOT =         "\medskip \newline The method of successive 
                  refinements (inspired by its application in
		  \cite{Boerger90a,Boerger90b}) is used to give a
		  succinct dynamic semantics of the C programming
		  language. For a correction of minor errors and
		  omissions see the ERRATA in LNCS 832 (1994),
		  334-336. An early version appeared under the title
		  {\em The Evolving Algebra Semantics of C:
		  Preliminary Version} as Technical Report
		  CSE-TR-141-92, EECS Department, University of 
		  Michigan, Ann Arbor, 1992. This work is included in
		  the PhD thesis  {\em Evolving Algebras: Tools for
		  Specification, Verification, and Program
		  Transformation} of the second author, pp.IX+91,
		  University of Michigan, Ann Arbor, 1995. For an
		  extension to C++ see \cite{Wallace94}."  
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InProceedings{GurHug94, 
  author =       "Y. Gurevich and J. Huggins", 
  title =        "{Evolving Algebras and Partial Evaluation}",
  editor =       "B. Pehrson and I. Simon", 
  volume =       "I: Technology/Foundations", 
  pages =        "587-592", 
  booktitle =    "IFIP 13th World Computer Congress", 
  year =         "1994", 
  address =      "Elsevier, Amsterdam, the Netherlands", 
  noteNOT =         "\medskip \newline The paper describes an automated 
                  partial evaluator for sequential ASMs
                  implemented at the University of Michigan. It takes
		  an ASM and a portion of its input and produces a
		  specialized ASM using the provided input to execute
		  rules when possible and generating new rules
		  otherwise.  A full version appears as J.~Huggins,
		  ``An Offline Partial Evaluator for Evolving
		  Algebras'', Technical Report CSE-TR-229-95, EECS
		  Department, University of Michigan, Ann Arbor,
		  1995. This work is included in the PhD thesis  {\em
		  Evolving Algebras: Tools for Specification,
		  Verification, and Program Transformation} of the
		  second author, pp.IX+91, University of Michigan, Ann
		  Arbor, 1995. " 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InProceedings{GurHug96,
  author = 	 "Y. Gurevich and J. Huggins",
  title = 	 "{The Railroad Crossing Problem: An Experiment with
                  Instantaneous Actions and Immediate Reactions}",
  booktitle = 	 "Proceedings of CSL'95 (Computer Science Logic)",
  volume =       1092,
  series =	 {LNCS},
  year =	 1996,
  publisher =	 {Springer},
  pages =	 {266-290},
  noteNOT = 	 "\medskip \newline An ASM solution for
                  the railroad crossing problem.   The
                  paper experiments with agents that perform
                  instantaneous actions in continuous time and in
                  particular with agents that fire at the moment they
                  are enabled. A preliminary version appeared 
		  under the title {\em The Railroad Crossing 
                  Problem: An Evolving Algebra Solution} as research
		  report LITP 95/63 of Centre National de la Recherche
		  Scientifique, Paris, and under the title {\em The
		  Generalized Railroad Crossing Problem: An Evolving
		  Algebra Based Solution} as research report
		  CSE-TR-230-95 of EECS Department, University of
		  Michigan, Ann Arbor, MI.  For a relation to model
		  checking see \cite{BeaSli97a,BeaSli97b}. "
}
		  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@Article{GurHug97,
  author = 	 "Y. Gurevich and J. Huggins",
  title = 	 "{Equivalence Is In The Eye Of The Beholder}",
  journal = 	 "Theoretical Computer Science",
  year = 	 "1997",
  volume =       179,
  number =       "1-2",
  pages = 	 "353-380",
  noteNOT = 	 "\medskip \newline A response to a paper of Leslie
                  Lamport, ``Processes are in the Eye of the
                  Beholder'' which is published in the same volume.
		  It is discussed how the same two algorithms 
		  may and may not be considered equivalent.  In
		  addition, a direct proof is given of an appropriate
		  equivalence of two particular algorithms considered
		  by Lamport. A preliminary version appeared as
		  research report CSE-TR-240-95, EECS Dept.,
		  University of Michigan, Ann Arbor, Michigan 1995."
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InCollection{GurMan94, 
  author =       "Y. Gurevich and R. Mani", 
  title =        "{Group Membership Protocol: Specification and
		  Verification}",
  booktitle =    "Specification and Validation Methods", 
  publisher =    "Oxford University Press", 
  year =         "1995", 
  pages =        "295-328",
  editor =       "E. B{\"o}rger", 
  noteNOT =         "\medskip \newline An interesting and useful protocol 
                  of Flavio Cristian involves timing constraints and 
                  its correctness is not obvious.  The protocol is 
                  formally specified and verified.  (The verification 
                  proof allowed the authors to simplify the 
                  assumptions slightly.)" 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@InProceedings{GurMos90, 
  author =       "Y. Gurevich and L. Moss", 
  title =        "{Algebraic Operational Semantics and Occam}", 
  editor =       "E. B{\"o}rger and H. {Kleine B{\"u}ning} and M. M. Richter", 
  volume =       "440", 
  series =       "LNCS", 
  pages =        "176-192", 
  booktitle =    "CSL'89, 3rd Workshop on Computer Science Logic", 
  year =         "1990", 
  publisher =    "Springer", 
  noteNOT =         "\medskip \newline The first application of ASMs
                  to distributed parallel computing with the 
                  challenge of true concurrency. See
		  \cite{BoDuRo94,BoeDur96}." 
}  

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{GuScVe01a,
  author = 	 {{Y. Gurevich and W. Schulte and M. Veanes}},
  title = 	 {{Rich Sequential-Time ASMs}},
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {291-293},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline An extended abstract describing
                  extensions to sequential ASMs incorporated in
                  Microsoft's AsmL language.  Full paper in
                  \cite{GuScVe01b}.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@TechReport{GuScVe01b,
  author = 	 {{Y. Gurevich and W. Schulte and M. Veanes}},
  title = 	 {{Toward Industrial Strength Abstract State Machines}},
  institution =  {Microsoft Research},
  year = 	 {2001},
  type =	 {Technical Report},
  number =	 {MSR-TR-2001-98},
  month =	 {October},
  noteNOT =	 {\medskip \newline A description of extensions to
                  sequential ASMs incorporated in Microsoft's AsmL
                  language.  Announced in \cite{GuScVe01a}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{GuScWa00,
  author = 	 {Y. Gurevich and W. Schulte and C. Wallace},
  title = 	 {{Investigating Java Concurrency using Abstract State
                  Machines}},
  booktitle = 	 {{Abstract State Machines: Theory and Applications}},
  pages =	 {151--176},
  year =	 {2000},
  editor =	 {{Y. Gurevich and P. Kutter and M. Odersky and L. Thiele}},
  volume =	 {1912},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT =	 {\medskip \newline An ASM specification and
                  verification of Java's model of concurrency, 
                  including threads and synchronization.  Also in
                  TIK-Report 87, Swiss Federal Institute of Technology
                  (ETH) Zurich, March 2000, 227--271, and as
                  University of Delaware Department of Computer \&
                  Information Sciences Technical Report 2000-04.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@Article{GuSoWa97,
  author = 	 {Y. Gurevich and N. Soparkar and C. Wallace},
  title = 	 {{Formalizing Database Recovery}},
  journal = 	 {Journal of Universal Computer Science},
  year = 	 {1997},
  volume =	 {3},
  number =	 {4},
  pages =	 {320-340},
  noteNOT =	 {\medskip \newline A database recovery algorithm
 		  (the undo-redo algorithm) is modeled at several
 		  levels of abstraction, with verification of the
 		  correctness of each model.  An updated version of
		  \cite{WaGuSo95} and of the Technical Reports
		  CSE-TR-249-95 and CSE-TR-327-97 of
		  EECS Department, University of Michigan, Ann Arbor.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@Article{GurSpi97,
  author = 	 {Y. Gurevich and M. Spielmann},
  title = 	 {{Recursive Abstract State Machines}},
  journal = 	 {Journal of Universal Computer Science},
  year = 	 {1997},
  volume =	 {3},
  number =	 {4},
  pages =	 {233-246},
  noteNOT =	 {\medskip \newline The authors suggest a definition
 		  of recursive ASMs in terms of distributed ASMs.
		  Preliminary version appeared as Technical Report
		  CSE-TR-322-96, EECS Department, University of
		  Michigan, Ann Arbor, 1996.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{GurRos00,
  author = 	 {{Y. Gurevich and D. Rosenzweig}},
  title = 	 {{Partially Ordered Runs: A Case Study}},
  booktitle = 	 {{Abstract State Machines: Theory and Applications}},
  pages =	 {131--150},
  year =	 {2000},
  editor =	 {{Y. Gurevich and P. Kutter and M. Odersky and L. Thiele}},
  volume =	 {1912},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT =	 {\medskip \newline A case study of Lamport's Bakery
                  Algorithm using partially ordered runs.  Using the
                  case study, the authors look at some of the
                  difficulties in reasoning about partially ordered
                  runs and propose some techniques.  Also appears in
                  TIK-Report 87, Swiss Federal Institute of
                  Technology (ETH) Zurich, March 2000, and
                  as Microsoft Research Technical Report MSR-TR-99-98.}}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{GurTil01,
  author = 	 {Y. Gurevich and N. Tillmann},
  title = 	 {{Partial Updates: Exploration}},
  journal = 	 {{Journal of Universal Computer Science}},
  year = 	 {2001},
  volume =	 {7},
  number =	 {11},
  pages =	 {917-951},
  noteNOT =	 {\medskip \newline A solution to the problem of
                  partial updates (e.g. counters, sets, and maps) is
                  proposed and investigated.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{GurTil05,
  author = 	 {Y. Gurevich and N. Tillmann},
  title = 	 {{Partial Updates}},
  journal = 	 {{Journal of Theoretical Computer Science}},
  year = 	 {2005},
  volume =	 {336},
  number =	 {2-3},
  pages =	 {311-342},
  noteNOT =	 {\medskip \newline (i) A more general framework for partial
                  partial updates is described, and (ii) a solution for the
		  partial update problem for sequences and label ordered
		  trees.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@TechReport{GurWal99,
  author = 	 {{Y. Gurevich and C. Wallace}},
  title = 	 {{Specification and verification of the Windows Card
                  runtime environment using Abstract State Machines}},
  institution =  {Microsoft Research},
  year = 	 {1999},
  type =	 {Technical Report},
  number =	 {MSR-TR-99-07},
  month =	 {February},
  noteNOT =	 {\medskip \newline An ASM specification of the
                  Windows Card Runtime Environment and a verification
                  of certain safety properties.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{HebLoe98,
  author = 	 {A. Heberle and W. L\"owe},
  title = 	 {{On ASM-Based Specification of Programming Language
                  Semantics and Reusable Correct Compilations}},
  booktitle = 	 {Proceedings of the 28th Annual Conference of the
                  German Society of Computer Science},
  year =	 {1998},
  publisher =	 {Technical Report, Magdeburg University},
  noteNOT =	 {\medskip \newline General equivalence-preserving
                  transformations on ASM specifications of programming
                  languages are defined.  A restricted language AL is
                  introduced for specifying language semantics and for
                  facilitating reuse of verified transformations.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@InCollection{Huggins94, 
  author =       "J. Huggins", 
  title =        "{Kermit: Specification and Verification}", 
  booktitle =    "Specification and Validation Methods", 
  publisher =    "Oxford University Press", 
  year =         "1995", 
  editor =       "E. B{\"o}rger", 
  pages =        "247-293",
  noteNOT =         "\medskip \newline The Kermit file-transfer protocol 
                  (including a sliding windows extension to the basic 
                  protocol) is specified and verified using ASMs
                  at several different layers of abstraction.  This
		  work is included in the PhD thesis  {\em Evolving
		  Algebras: Tools for Specification, Verification, and
		  Program Transformation} of the second author,
		  pp.IX+91, University of Michigan, Ann Arbor, 1995"  
} 
		  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
	  

@TechReport{Huggins96,
  author = 	 {J. Huggins},
  title = 	 {{Broy-Lamport Specification Problem: A Gurevich
		  Abstract State Machine Solution}},
  institution =  {EECS Dept., University of Michigan},
  year = 	 {1996},
  type =	 {Technical Report},
  number =	 {CSE-TR-320-96},
  noteNOT =	 {\medskip \newline An ASM solution
                  to a specification problem suggested by Manfred Broy
                  and Leslie Lamport, in conjunction with the Dagstuhl
                  Workshop on Reactive Systems, held in
                  Dagstuhl, Germany, 26-30 September, 1994.
		  Preliminary version appeared as Technical Report
		  CSE-TR-223-94, EECS Department, University of
		  Michigan, Ann Arbor, 1994.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@Article{HugVan98,
  author = 	 {J. Huggins and D. {Van Campenhout}},
  title = 	 {{Specification and Verification of Pipelining in the
		  ARM2 RISC Microprocessor}},
  journal = 	 {{ACM Transactions on Design Automation of Electronic 
                   Systems}}, 
  year = 	 {1998},
  volume =	 {3},
  number =	 {4},
  month =	 {October},
  pages =        {563--580},
  noteNOT =	 {\medskip \newline An extended abstract describing a 
                  layered ASM specification of the ARM2, one of the early 
                  commerical RISC microprocessors.  The layered specification
                  is used to prove the correctness of the ARM2's pipelining
		  techniques.  Full version appears as University of Michigan
                  EECS Department Technical Report CSE-TR-371-98.  An earlier 
                  version appears in {\em Proceedings of the IEEE 
                  International High Level Design Validation and Test 
                  Workshop (HLDTV'97)}, November 1997.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@TechReport{HugShe99,
  author = 	 {J. Huggins and W. Shen},
  title = 	 {{The Static and Dynamic Semantics of C}},
  institution =  {Kettering University, Computer Science Program},
  year = 	 {2000},
  type =	 {Technical Report},
  number =	 {CPSC-2000-4},
  noteNOT =	 {\medskip \newline The ASM for C in \cite{GurHug93}
                  is extended to provide both static and dynamic
                  semantics for C, using Montages \cite{KutPie97a}.
                  An extended abstract appears in Y. Gurevich,
                  P. Kutter, M. Odersky, and L. Thiele, eds.,
                  \emph{Abstract State Machines -- ASM 2000},
                  International Workshop on Abstract State Machines,
                  Monte Verita, Switzerland, Local Proceedings,
                  TIK-Report 87, Swiss Federal Institute of Technology
                  (ETH) Zurich, March 2000, 272--283.  A previous
                  version appears as Kettering University Computer
                  Science Program Technical Report CPSC-1999-1.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@TechReport{HugWal02,
  author = 	 {J. Huggins and C. Wallace},
  title = 	 {{An Abstract State Machine Primer}},
  institution =  {Computer Science Department, Michigan Technological
                  University},
  year = 	 {2002},
  type =	 {Technical Report},
  number =	 {CS-TR-02-04},
  month =	 {4 December},
  noteNOT =	 {\medskip \newline An introduction to writing ASMs, written
                  as a dialogue between an instructor and an
                  undergraduate student in a software engineering course.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@TechReport{JanKut98a,
  author = 	 {J. Janneck and P. Kutter},
  title = 	 {{Object-based Abstract State Machines}},
  institution =  {Swiss Federal Institute of Technology (ETH) Zurich},
  year = 	 {1998},
  type =	 {TIK-Report},
  number =	 {47},
  noteNOT =	 {\medskip \newline A propsed extension of ASMs to
                  include object-based constructs.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@TechReport{JanKut98b,
  author = 	 {J. Janneck and P. Kutter},
  title = 	 {{Mapping Automata: Simple Abstract State Machines}},
  institution =  {Swiss Federal Institute of Technology (ETH) Zurich},
  year = 	 {1998},
  type =	 {TIK-Report},
  number =	 {49},
  month =	 {June},
  noteNOT =	 {\medskip \newline The authors introduce the notion
                  of \emph{mapping automata}: a computational model
                  similar to ASMs with an object-oriented view of
                  states.  The equivalence of mapping automata and
                  ASMs is proven.  (Mapping automata are used as the
                  basis for an ASM interpreter.)  Also appears in
                  Y. Gurevich, P. Kutter, M. Odersky, and L. Thiele,
                  eds., "Abstract State Machines -- ASM 2000",
                  International Workshop on Abstract State Machines,
                  Monte Verita, Switzerland, Local Proceedings,
                  TIK-Report 87, Swiss Federal Institute of Technology
                  (ETH) Zurich, March 2000, 310--325.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@Article{JohMos94,
  author = 	 "D. Johnson and L. Moss",
  title = 	 "{Grammar Formalisms Viewed As Evolving Algebras}",
  journal = 	 "Linguistics and Philosophy",
  year = 	 "1994",
  volume = 	 "17",
  pages = 	 "537-560",
  noteNOT = 	 "\medskip \newline Distributed ASMs are 
		  used to model formalisms for natural language 
		  syntax. The authors start by defining an ASM
                  model of context free derivations which 
		  abstracts from the parse tree descriptions used in 
		  \cite{GurMos90,BoeRic93} and from the dynamic tree 
		  generation appearing in 
		  \cite{BoeRos91c,BoeRos94}. Then the 
		  simple model of context free rules is extended to 
		  characterise in a uniform and natural way different 
		  context sensitive languages in terms of ASMs. See
                  \cite{MosJoh95a,MosJoh95b}." 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@InCollection{Kappel93, 
  author =       "A. M. Kappel", 
  title =        "{Executable Specifications Based on Dynamic Algebras}", 
  booktitle =    "Logic Programming and Automated Reasoning", 
  publisher =    "Springer", 
  year =         "1993", 
  editor =       "A. Voronkov", 
  volume =       "698", 
  series =       "Lecture Notes in Artificial Intelligence", 
  pages =        "229-240", 
  noteNOT =         "\medskip \newline Defines a language for 
                  specification of ASMs and designs an 
                  abstract target machine (namely a Prolog program) 
                  which is specially tailored for executing ASM
                  computations. A prototype of the compiler 
                  has been implemented in Prolog.  For a full
		  version see A.~M.~Kappel, ``Implementation of
		  Dynamic Algebras with an Application to Prolog'',
		  Master's Thesis, Universit{\"a}t Dortmund, Germany, 1990."
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{KKPPS03,
  author = 	 {A. Kalinov and A. Kossatchev and A. Petrenko and
                  M. Posypkin and V. Shishkov}, 
  title = 	 {{Coverage-driven Automated Compiler Test Suite Generation}},
  journal = 	 {{Electronic Notes in Theoretical Computer Science}},
  year = 	 {2003},
  volume =	 {82},
  number =	 {3},
  noteNOT =	 {\medskip \newline Montage-based specifications of
                  source languages for compilers are used to generate
                  compiler test suites (with both positive and
                  negative examples).  An extension of \cite{KKPS02}.
                  (Journal issue is Proceedings of LDTA'03.)}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{KKPS02,
  author = 	 {A. Kalinov and A. Kossatchev and M. Posypkin and
                  V. Shishkov},  
  title = 	 {{Using ASM specification for automatic test suite
                  generation for mpC parallel programming language
                  compiler}},
  booktitle =	 {{Proceedings of the Fourth International Workshop on
                  Action Semantics, AS 2002}},
  pages =	 {99--109},
  year =	 {2002},
  editor =	 {P. Mosses},
  number =	 {NS-02-8},
  series =	 {BRICS Notes Series},
  organization = {University of Aarhus, Department of Computer Science},
  noteNOT =	 {\medskip \newline Montage-based specifications of
                  mpC expressions are used to generate compiler test
                  suites for mpC compilers.  Extended in \cite{KKPPS03}.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{KapWil95,
  author = 	 {A. Kaplan and J. Wileden},
  title = 	 {{Formalization and Application of a Unifying Model
		  for Name Management}},
  booktitle = 	 {{The Third ACM SIGSOFT Symposium on the Foundations
		  of Software Engineering}},
  volume =	 {20(4)},
  series =	 {Software Engineering Notes},
  year =	 {1995},
  month =	 {October},
  pages =	 {161-172},
  noteNOT =	 {\medskip \newline Presents a unifying model for
		  name management, using ASMs as the specification
		  language for the model. A preliminary version
		  appeared in July 1995 as CMPSCI Technical Report
		  95-60 of Computer Science Department, University of
		  Massachusetts, Amherst.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@MastersThesis{Kutter96,
  author = 	 {P. Kutter},
  title = 	 {{Integration of the Statecharts in Specware and
                  Aspects of Correct Oberon Code Generation}},
  school = 	 {ETH Zurich},
  year = 	 {1996},
  noteNOT =	 {\medskip \newline ASMs are used in automatic code
                  generation of correct imperative code from statecharts.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@TechReport{Kutter98,
  author = 	 {P. Kutter},
  title = 	 {{An ASM Macro Language for Sets}},
  institution =  {Swiss Federal Institute of Technology (ETH) Z\"urich},
  year = 	 {1998},
  type = 	 {TIK-Report},
  number = 	 {34},
  month = 	 {January},
  noteNOT = 	 {\medskip \newline A small set of simple, generic macros 
                   that allow one to manipulate and parametrize sets in ASMs,
                   without changing the semantics given in \cite{Gurevich94b}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@TechReport{Kutter02,
  author = 	 {P. Kutter},
  title = 	 {{The Formal Definition of Anlauff's eXtensible
                  Abstract State Machines}},
  institution =  {Swiss Federal Institute of Technology (ETH) Zurich},
  year = 	 {2002},
  type =	 {TIK-Report},
  number =	 {136},
  month =	 {June},
  noteNOT =	 {\medskip \newline A formal denotational semantics
                  for XASM \cite{Anlauff00}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@Article{KutPie97a,
  author = 	 {P. Kutter and A. Pierantonio},
  title = 	 {{Montages: Specifications of Realistic Programming
		  Languages}}, 
  journal = 	 {Journal of Universal Computer Science},
  year = 	 {1997},
  volume =	 {3},
  number =	 {5},
  pages =	 {416-442},
  noteNOT =	 {\medskip \newline The authors introduce Montages, a
 		  version of ASMs specifically tailored for specifying
 		  the static and dynamic semantics of programming
 		  languages. Montages combine graphical and textual
 		  elements to yield specifications similar in
 		  structure, length, and complexity to those in common
 		  language manuals, but with a formal semantics.
		  A preliminary version appeared in July 1996 under
		  the title {\em Montages: Unified Static and Dynamic
		  Semantics of Programming Languages} as Technical
		  Report 118 of Universita de L'Aquila.  Extended in
                  \cite{AnKuPi99a} with a finite-state machine model.}  
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@Article{KutPie97b,
  author = 	 {P. Kutter and A. Pierantonio},
  title = 	 {{The Formal Specification of Oberon}},
  journal = 	 {Journal of Universal Computer Science},
  year = 	 {1997},
  volume =	 {3},
  number =	 {5},
  pages =	 {443-503},
  noteNOT =	 {\medskip \newline A presentation of the syntax,
		  static semantics, and dynamic semantics of Oberon,
		  using ASMs and Montages \cite{KutPie97a}.  The dynamic
		  semantics previously appeared as P.~Kutter,
		  ``Dynamic Semantics of the Oberon Programming
		  Language'', TIK-Report 25, Swiss Federal Institute
                  of Technology (ETH)-Z{\"u}rich, Feburary 1997.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{KuScTh98,
  author = 	 {P. Kutter and D. Schweizer and L. Thiele},
  title = 	 {{Integrating Domain Specific Language Design in the
                  Software Life Cycle}},
  booktitle = 	 {{Proceedings of the International Workshop on Current
                  Trends in Applied Formal Methods}},
  series =	 {Lecture Notes in Computer Science},
  year =	 {1998},
  publisher =	 {Springer},
  noteNOT =	 {\medskip \newline A report on an industrial case
                  study, applying Montages \cite{KutPie97a} to the
                  design and specification of a domain-specific language.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@Article{Kwon97,
  author = 	 {K. Kwon},
  title = 	 {{A Structured Presenation of a Closure-Based
		  Compilation Method for a Scoping Notion in Logic
		  Programming}}, 
  journal = 	 {Journal of Universal Computer Science},
  year = 	 {1997},
  volume =	 {3},
  number =	 {4},
  pages =	 {341-376},
  noteNOT =	 {\medskip \newline An extension to logic programming
 		  which permits scoping of procedure definitions is
 		  described at a high level of abstraction (using
		  ASMs) and refined (in a provably-correct manner) to
		  a lower level, building upon the method developed in
                  \cite{BoeRos95}.}   
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@InProceedings{LisOsi96,
  author = 	 {A. Lisitsa and G. Osipov},
  title = 	 {{Evolving algebras and labelled deductive systems
		  for the semantic network based reasoning}},
  booktitle = 	 {Proceedings of the Workshop on Applied Semiotics, ECAI'96},
  year =	 {1996},
  month =	 {August},
  pages =	 {5-12},
  noteNOT =	 {\medskip \newline ASMs are used to present the
		  high-level semantics for MIR, an AI semantic network
		  system.  Another formalization of MIR is given in
		  terms of labeled deduction systems, and the two
		  formalizations are compared.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@TechReport{MaiBig99,
  author = 	 {M. Maia and R. Bigonha},
  title = 	 {{An ASM-Based Approach for Mobile Systems}},
  institution =  {Programming Language Laboratory, Computer Science
                  Department, Universidade Federal de Minas Gerais},  
  year = 	 {1999},
  type =	 {Technical Report},
  number =	 {LLP-12/99},
  noteNOT =	 {\medskip \newline Using the Interacting ASM
                  techniques introduced in \cite{MaIoSi98}, the
                  authors describe the use of ASMs to specify the
                  semantics of active mobile objects.  Mobility is
                  expressed by dynamic changes in the communication
                  topology.  An earlier version appears as Technical
                  Report LP 002/99 (same institution).} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{MaIoSi98,
  author = 	 {M. Maia and V. Iorio and R. Bigonha}, 
  title = 	 {{Interacting Abstract State Machines}},
  booktitle = 	 {Proceedings of the 28th Annual Conference of the
                  German Society of Computer Science},
  year =	 {1998},
  publisher =	 {Technical Report, Magdeburg University},
  noteNOT =	 {\medskip \newline An extended abstract
                  describing an extension to ASMs supporting the
                  interaction of independent ASM agents by means of
                  message passing.  Full version appears as M. Maia
                  and R. Bigonha, {\em The Formal Specification of the
                  Interactive Abstract State Machine Language},
                  Technical Report 005/98, Universidade Federal de
                  Minas Gerais, Brazil, 1998.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Matousek01,
  author = 	 {{P. Matou{\u s}ek}},
  title = 	 {{Semantics of the Process Description Language}},
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {281-285},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline An extended abstract describing an
                  ASM semantics for the Process Description Language
                  (PDL), a Java extension for the description of processes.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{May97,
  author =       "W.~May",
  title =        "{Specifying Complex and Structured Systems with
                  Evolving Algebras}",
  number =       {1214},
  publisher =    "Springer",		  
  series =       {LNCS},
  pages =        "535--549",
  booktitle =    "{TAPSOFT'97: Theory and Practice of Software Development, 7th
     International Joint Conference CAAP/FASE}",
  year =         1997,
  noteNOT =         {\medskip \newline An approach is presented for
		  specifying complex, structured systems with ASMs
		  by means of aggregation and composition.  An earlier
                  version appeared under the title "Modeling
                  Rule-Based and Structured Systems with Evolving
                  Algebras" as Technical Report, Freiburg, 1996.}
}
		  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@Article{Mearelli97,
  author = 	 {L. Mearelli},
  title = 	 {{Refining an ASM Specification of the Production
		  Cell to $C^{++}$ Code}},
  journal = 	 {Journal of Universal Computer Science},
  year = 	 {1997},
  volume =	 {3},
  number =	 {5},
  pages =	 {666-688},
  noteNOT =	 {\medskip \newline Source code for the specification
		  problem described in \cite{BoeMea97}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@PhdThesis{Mlotkowski01,
  author = 	 {M. Mlotkowski},
  title = 	 {{Specification and Optimization of the Smalltalk programs}},
  school = 	 {University of Wroclaw},
  year = 	 {2001},
  noteNOT =	 {\medskip \newline An operational semantics of
                  Smalltalk is given using ASMs, along with proofs of
                  equivalence of certain optimization techniques.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@Article{Mohnen97,
  author = 	 {M. Mohnen},
  title = 	 {{A Compiler Correctness Proof for the Static Link
		  Technique by means of Evolving Algebras}},
  journal = 	 {Fundamenta Informatica},
  year = 	 {1997},
  volume =	 {29},
  number =	 {3},
  pages =	 {257-303},
  noteNOT =	 {\medskip \newline The static link technique is a
 		  common method used by stack-based implementations of
 		  imperative programming languages.  The author uses
 		  ASMs to prove the correctness of this
 		  well-known technique in a non-trivial subset of
 		  Pascal.}  
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{MoShTa01,
  author = 	 {{Y. Mokhtari and M. Shirazipour and S. Tahar}},
  title = 	 {{A Case Study on Model Checking and Refinement of
                  Abstract State Machines}},  
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {239-242},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline A description of a case study
                  applying the ASM-SMV model checking techniques of
                  \cite{DelWin00} to the Fairisle ATM switch.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
 
@PhdThesis{Morris88, 
  author =       "J. Morris", 
  title =        "{Algebraic Operational Semantics and Modula-2}", 
  school =       "University of Michigan", 
  year =         "1988", 
  address =      "Ann Arbor, Michigan", 
  noteNOT =         "\medskip \newline The earliest formalization of a 
                  real-life language. The semantical description is 
                  parse-tree directed. In the meantime, the 
                  methodology has developed enabling more elegant 
                  descriptions, but one has to start 
                  somewhere.  A PhD thesis under the supervision of
		  Yuri Gurevich.  An extended abstract appeared 
		  as Y.~Gurevich and J.~Morris, ``Algebraic
		  Operational Semantics and Modula-2'', in
		  E.~B{\"o}rger, H.~{Kleine~B{\"u}ning} and
		  M.~M.~Richter, eds., {\em CSL'87, 1st Workshop on
		  Computer Science Logic}, Springer LNCS 329, 1988,
		  pp. 81-101."
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@Unpublished{MorPot90, 
  author =       "J. Morris and G. Pottinger", 
  title =        "{Ada-Ariel Semantics}", 
  noteNOT =         "Odyssey Research Associates, Manuscript", 
  year =         "1990", 
  month =        "July" 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@Article{MosJoh95a,
  author = 	"L. S. Moss and D. E. Johnson",
  title =    	"{Dynamic Interpretations of Constraint-Based Grammar
		  Formalisms}", 
  journal =  	"Journal of Logic, Language, and Information",
  year =     	"1995",
  volume =   	"4",
  number =   	"1",
  pages =     	"61-79",
  noteNOT =       	"\medskip \newline  Extends the work of
              	\cite{JohMos94} to grammar formalisms based on Kasper-Rounds
              	logics."
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InCollection{MosJoh95b,   
  author = 	"L. S. Moss and D. E. Johnson",
  title =    	"{Evolving Algebras and Mathematical Models of Language}",
  booktitle =  	"{\em Applied Logic:  How, What, and Why}",
  publisher = 	"Kluwer Academic Publishers",
  year =     	"1995",
  volume =      "626",
  series =      "Synthese Library",
  editor =   	"L. Polos and M. Masuch",
  pages =     	"143-175",
  noteNOT =       	"\medskip \newline  Extends the work of
              	\cite{JohMos94} to several other grammar formalisms."
}
		  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@InProceedings{Muller94, 
  author =       "B. M{\"u}ller", 
  title =        "{A Semantics for Hybrid Object--Oriented Prolog Systems}", 
  editor =       "B. Pehrson and I. Simon", 
  volume =       "I: Technology/Foundations", 
  booktitle =    "IFIP 13th World Computer Congress", 
  year =         "1994", 
  address =      "Elsevier, Amsterdam, the Netherlands", 
  noteNOT =         "\medskip \newline Extends the rules given in 
                  \cite{BoeRos94} for the user--defined core of 
                  Prolog to define the semantics of a hybrid 
                  object--oriented Prolog system. The definition 
                  covers the central object--oriented features of: 
                  object creation and deletion, data encapsulation, 
                  inheritance, messages, polymorphism and dynamic 
                  binding." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@Article{Nemeth02,
  author = 	 {Z. N\'{e}meth},
  title = 	 {{Definition of a Parallel Execution Model with
                  Abstract State Machines}},
  journal = 	 {{Acta Cybernetica}},
  year = 	 {2002},
  volume =	 {15},
  number =	 {3},
  pages =	 {417-455},
  noteNOT =	 {\medskip \newline Two ASMs are defined and related
                  by a refinement correctness proof, as preparation
                  for designing and verifying a distributed parallel
                  Prolog execution model.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{NemSun02,
  author = 	 {Z. N\'{e}meth and V. Sunderam},
  title = 	 {{A Formal Framework for Defining Grid Systems}},
  booktitle =	 {{Proceedings of the Second IEEE/ACM International
                  Symposium on Cluster Computing and the Grid, CCGRID2002}},
  pages =	 {202-211},
  year =	 {2002},
  month =	 {May},
  publisher =	 {IEEE Computer Society Press},
  noteNOT =	 {\medskip \newline ASMs are used to define a model
                  for grid systems.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{NicRic01,
  author = 	 {{M. {Nicolosi Asmundo} and E. Riccobene}},
  title = 	 {{Using ASMs for Inconsistency Handling through
                  ViewPoints Framework}},
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {228-231},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline A description of the use of
                  ASMs in handling inconsistent problem
                  specifications, using Finklestein's notion of ViewPoints.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Ober00,
  author = 	 {I. Ober},
  title = 	 {{More Meaningful UML Models}},
  booktitle =	 {{Proceedings of TOOLS-37 Pacific 2000}},
  pages =	 {146-157},
  year =	 {2000},
  month =	 {20-23 November},
  publisher =	 {{IEEE Computer Society Press}},
  noteNOT =	 {\medskip \newline ASMs are used to define portions
                  of UML's static semantics (the UML meta-model
                  and well formedness rules) and dynamic semantics
                  (UML actions).}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@PhdThesis{Ober01,
  author = 	 {I. Ober},
  title = 	 {{Harmonizing Design Languages with Object-Oriented
                  Extensions and an Executable Semantics}},  
  school = 	 {{Institut National Polytechnique de Toulouse}},
  year = 	 {2001},
  month =	 {April},
  noteNOT =	 {\medskip \newline Extensions to SDL and UML, each
                  inspired by the other language, are defined and
                  analyzed.  The UML extensions, concerning a generic
                  behavior description mechanism based on UML actions,
                  are given formal semantics by ASMs.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Odersky98,
  author = 	 {M. Odersky},
  title = 	 {{Programming with Variable Functions}},
  booktitle = 	 {{ICFP'98, Proceedings of the Third ACM SIGPLAN
                  International Conference on Functional Programming}},
  series =       {ACM SIGPLAN Notices},
  volume =	 {34},
  number =	 {1},
  year =	 {1999},
  month =	 {January},
  pages =	 {105--116},
  noteNOT =	 {\medskip \newline The use of "variable functions"
                  (functions which can be updated at specified points
                  in their domains) is proposed as a method for
                  deriving efficient imperative programs from
                  functional programs.  The notion of variable
                  function is drawn from the dynamic functions of ASMs.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Pahl00,
  author = 	 {C. Pahl},
  title = 	 {{Towards an Action Refinement Calculus for Abstract
                  State Machines}}, 
  booktitle = 	 {{Abstract State Machines -- ASM 2000, International
                  Workshop on Abstract State Machines, Monte Verita,
                  Switzerland, Local Proceedings}},
  pages =	 {326--340},
  year =	 {2000},
  editor =	 {Y. Gurevich and P. Kutter and M. Odersky and L. Thiele},
  number =       {87},
  series =	 {TIK-Report},
  month =	 {March},
  organization = {Swiss Federal Institute of Technology (ETH) Zurich},
  noteNOT = 	 {\medskip \newline A refinement calculus for (a
                  reformulation of) ASMs is presented. }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@TechReport{Poetzsch93, 
  author =       "A. {Poetzsch-Heffter}", 
  title =        "{Interprocedural Data Flow Analysis based on 
                  Temporal Specifications}",  
  institution =  "Cornell University", 
  year =         "1993", 
  number =       "93-1397", 
  address =      "Ithaca, New York", 
  noteNOT =         "\medskip \newline Investigates the specification of 
                  data flow problems by temporal logic formulas and 
                  proves fixpoint analyses correct.  Temporal formulas 
                  are interpreted w.r.t.~programming language 
                  semantics given in the framework of ASMs." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@InCollection{Poetzsch94a, 
  author =       "A. {Poetzsch-Heffter}", 
  title =        "{Developing Efficient Interpreters based on Formal 
                  Language Specifications}", 
  booktitle =    "Compiler Construction", 
  publisher =    "Springer", 
  year =         "1994", 
  editor =       "P. Fritzson", 
  volume =       "786", 
  pages =        "233-247",
  series =       "LNCS", 
  noteNOT =         "\medskip \newline Reports on extensions of the MAX 
                  system enabling the generation and refinement of 
                  interpreters based on formal language 
                  specifications. In these specifications, static 
                  semantics is defined by an attribution mechanism and 
                  dynamic semantics is defined by ASMs.  Included in
		  \cite{Poetzsch97}."  
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@InProceedings{Poetzsch94b, 
  author =       "A. {Poetzsch-Heffter}", 
  title =        "{Comparing Action Semantics and Evolving Algebra 
                  based Specifications with respect to Applications}", 
  booktitle =    "Proceedings of the First International Workshop on 
                  Action Semantics", 
  year =         "1994", 
  noteNOT =         "\medskip \newline Action semantics is compared to 
                  ASM based language specifications. In 
                  particular, different aspects relevant to language 
                  documentation and programming tool development are 
                  discussed." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@InProceedings{Poetzsch94c, 
  author =       "A. {Poetzsch-Heffter}", 
  title =        "{Deriving Partial Correctness Logics From Evolving
                  Algebras}", 
  editor =       "B. Pehrson and I. Simon", 
  volume =       "I: Technology/Foundations", 
  pages =        "434-439", 
  booktitle =    "IFIP 13th World Computer Congress", 
  year =         "1994", 
  address =      "Elsevier, Amsterdam, the Netherlands", 
  noteNOT =         "\medskip \newline A proposal for deriving partial
                  correctness logics from simple ASM 
                  models of programming languages. A  basic axiom 
                  (schema) is derived from an ASM and is 
                  used to obtain more convenient logics." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@Article{Poetzsch97,
  author =       { A. Poetzsch-Heffter },
  title =        {{ Prototyping Realistic Programming Languages Based On
                  Formal Specifications }},
  journal =      {{ Acta Informatica }},
  year =         1997,
  volume =       34,
  pages =        {737-772},
  noteNOT =         {\medskip \newline A tool supporting the generation
		  of language-specific software from specifications is
		  presented. Static semantics is defined by an
		  attribution technique (e.g.\ for the specification
		  of flow graphs). The dynamic semantics is defined by
		  ASMs. As an example, an object-oriented programming
		  language with parallelism is specified. This work is
		  partly based upon \cite{Poetzsch94a}.}
}
  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		

@InProceedings{PriTha03,
  author = 	 {A. Prinz and B. Thalheim},
  title = 	 {{Operational Semantics of Transactions}},
  booktitle =	 {{Proceedings of ADC'03, Fourteenth Australasian
                  Database Conference}},
  year =	 {2003},
  noteNOT =	 {\medskip \newline ASMs are used to give a formal
                  definition of the informal notion of ``transaction''
                  frequently used in database research.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InProceedings{Pusch96, 
  author =       "C. Pusch", 
  title =        "{Verification of compiler correctness for the WAM}", 
  editor =       "J. von Wright, J.Grundy, J.Harrison ", 
  year =         "1996", 
  volume =       "1125",
  series =       "LNCS",
  publisher =    "Springer",
  pages =        "347-362", 
  booktitle =    "Theorem Proving in Higher Order Logics (TPHOLs'96)", 
  noteNOT =          "\medskip \newline See comment to \cite{BoeRos95}." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@Article{Reichel96,
  author = 	 {H. Reichel},
  title = 	 {{Unifying ADT and Evolving Algebra Specifications}},
  journal = 	 {Bulletin of EATCS},
  year = 	 {1996},
  volume =	 {59},
  pages =	 {112-126}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@PhdThesis{Riccobene92, 
  author =       "E. Riccobene", 
  title =        "{Modelli Matematici per Linguaggi Logici}", 
  school =       "University of Catania", 
  year =         "1992", 
  noteNOT =         "\medskip \newline In Italian. Systematic treatment 
                  of ASM models for G{\"o}del 
                  \cite{BoeRic94}, Parlog \cite{BoeRic93}, Concurrent 
                  Prolog \cite{BoeRic92b}, GHC, Pandora." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@InProceedings{Rosenzweig94, 
  author =       "D. Rosenzweig", 
  title =        "{Distributed Computations: Evolving Algebra Approach}", 
  editor =       "B. Pehrson and I. Simon", 
  volume =       "I: Technology/Foundations", 
  pages =        "440-441", 
  booktitle =    "IFIP 13th World Computer Congress", 
  year =         "1994", 
  address =      "Elsevier, Amsterdam, the Netherlands", 
  noteNOT =         "\medskip \newline Remarks on some ASM 
                  models of concurrent and parallel computation." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{RoRuSl03,
  author = 	 {D. Rosenzweig and D. Runje and N. Slani},
  title = 	 {{Privacy, Abstract Encryption, and Protocols: an ASM
                  Model - Part I}},
  booktitle =	 {{Abstract State Machines 2003. Advances in Theory and
                  Practice}}, 
  pages =	 {372-390},
  year =	 {2003},
  editor =	 {E. B\"orger and A. Gargantini and E. Riccobene},
  number =	 {2589},
  series =	 {LNCS},
  publisher =	 {Springer},
  noteNOT =	 {\medskip \newline An executable formal model of
                  abstract encryption is presented (using AsmL) and
                  analyzed.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{RosUrb01,
  author = 	 {{D. Rosenzweig and I. Urbiha}},
  title = 	 {{The Magic of Atomicity and Synchronization: an ASM
                  View (Abstract)}},
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {255-256},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Rust00,
  author = 	 {H. Rust},
  title = 	 {{Hybrid Abstract State Machines: Using the
                  Hyperreals for Describing Continuous Changes in a
                  Discrete Notation}},
  booktitle = 	 {{Abstract State Machines -- ASM 2000, International
                  Workshop on Abstract State Machines, Monte Verita,
                  Switzerland, Local Proceedings}},
  pages =	 {341--356},
  year =	 {2000},
  editor =	 {Y. Gurevich and P. Kutter and M. Odersky and L. Thiele},
  number =       {87},
  series =	 {TIK-Report},
  month =	 {March},
  organization = {Swiss Federal Institute of Technology (ETH) Zurich},
  noteNOT = 	 {\medskip \newline A hybrid version of ASMs,
                  incorporating the hyperreals for continuously
                  changing quantities, is described. }

}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Sasaki99a,
  author = 	 {H. Sasaki},
  title = 	 {{A Formal Semantics for Verilog-VHDL Simulation
                  Interoperability by Abstract State Machine}},
  booktitle = 	 {Proceedings of DATE'99 (Design, Automation and Test
                  in Europe), ICM Munich, Germany},
  year =	 {1999},
  month =	 {March 9-12},
  noteNOT = 	 {\medskip \newline A formal semantics for Verilog-HDL
                  and VHDL focusing on the simulation model.  The
                  semantics presented is faithful to the language
                  reference manual and is
                  expected to become a first step towards semantic
                  interoperability analysis on multi-semantic domains
                  such as Verilog-AMS and VHDL-AMS.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Sasaki99b,
  author = 	 {H. Sasaki},
  title = 	 {{A New Dynamic Equation Scheduling to extend VHDL-AMS}},
  booktitle = 	 {Proceedings of Asia Pacific Conference on Chip
                  Design Languages (APCHDL'99)}, 
  year =	 {1999},
  address =	 {Fukuoka, Japan},
  month =	 {6-8 October},
  pages =	 {47--52},
  noteNOT =	 {\medskip \newline An extension to VHDL-AMS for
                  dynamic equation scheduling is proposed.  The
                  semantics of the extension is given in terms of the
                  ASM model for VHDL-AMS presented in \cite{SaMiSa97}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Sasaki99c,
  author = 	 {H. Sasaki},
  title = 	 {{A Formal Semantics on Net Delay in Verilog-HDL}},
  booktitle = 	 {Proceedings of Asia Pacific Conference on Chip
                  Design Languages (APCHDL'99)},
  year =	 {1999},
  address =	 {Fukuoka, Japan},
  month =	 {6-8 October},
  pages =	 {100--106},
  noteNOT =	 {\medskip \newline An extension of \cite{Sasaki99a}
                  giving semantics for net delays in Verilog-HDL using
                  ASMs.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@InProceedings{SaMiSa97,
  author = 	 {H. Sasaki and K. Mizushima and T. Sasaki},
  title = 	 {{Semantic Validation of VHDL-AMS by an Abstract
		  State Machine}},
  booktitle = 	 {Proceedings of BMAS'97 (IEEE/VIUF International
		  Workshop on Behavioral Modeling and Simulation)},
  year = 	 {1997},
  address = 	 {Arlington, VA},
  month = 	 {October 20-21},
  pages = 	 {61-68},
  noteNOT = 	 {\medskip \newline An extension of the ASM model
		  defined for VHDL in \cite{BoGlMu94,BoGlMu95} to
		  provide a rigorous definition of VHDL-AMS, following
		  the IEEE Language Reference Manual for the analog
		  extension of VHDL. }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{SaSaMi98,
  author = 	 {{T. Sasaki and H. Sasaki and K. Mizushima}},
  title = 	 {{Semantic Analysis of VHDL-ASM by Attribute Grammar}},
  booktitle = 	 {Proceedings of FDL'98 (Forum on Design Languages),
                  Lausanne, Switzerland},
  year =	 {1998},
  month =	 {September 6-10},
  noteNOT =	 {\medskip \newline An extension of \cite{SaMiSa97} to
                  provide a formal semantics of the VHDL Analog Mixed
                  Signal extension by means of attribute grammars.
                  The formulation treats both static and dynamic
                  aspects of semantics and permits one to show
                  equality of process behavior.  }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
		  
@PhDThesis{Sauer93,
  author = 	"J. Sauer",
  title =       "{Wissensbasiertes L\"osen von
		  Ablaufsplanungsproblemen durch explizite Heuristiken}",
  school = 	"Universit{\"a}t Oldenburg",
  year = 	"1993",
  noteNOT = 	"\medskip \newline Published in: Dissertationen zur
		  K{\"u}nstlichen Intelligenz, Infix-Verlag,
		  Dr. Ekkehardt Hundt, St. Augustin 1993,
		  pp. 204. Uses ASMs to define the semantics for
		  selection and elaboration of heuristics for
		  computation of goal sets in the language HERA.
		  See also J.~Sauer, ``Evolving Algebras for the
		  Description of a Meta-Scheduling System'', in
		  H.~Kleine~B{\"u}ning, ed., {\em Workshop der
		  GI-Fachgruppe Logik in der Informatik}, Technical
		  Report TR-RI-94-146, Universit{\"a}t Paderborn, 1994."
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@TechReport{Schoenegge95,
  author =       {A. Sch\"onegge},
  title =        {{Extending Dynamic Logic for Reasoning about Evolving 
Algebras}},
  institution =  {Universit{\"a}t Karlsruhe, Fakult{\"a}t f{\"u}r Informatik},
  year =         {1995},
  type =         {Technical Report},
  number =       {49/95},
  noteNOT =         {\medskip \newline EDL, an extension of dynamic
		  logic, is presented, which permits one to directly
		  represent statements about ASMs.  Such a logic lays
		  the foundation for extending the KIV (Karlsruhe
		  Interactive Verifier) to reason about ASMs directly.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{Schoenfeld98,
  author = 	 {W. Sch\"onfeld},
  title = 	 {{Interacting Abstract State Machines}},
  booktitle = 	 {Proceedings of the 28th Annual Conference of the
                  German Society of Computer Science},
  year =	 {1998},
  publisher =	 {Technical Report, Magdeburg University},
  noteNOT =	 {\medskip \newline An extension to ASMs which permits
                  one to specify forced synchronization of agent moves
                  (a la Petri nets) is proposed and explored, using
                  some examples.}
}
		  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{Schellhorn01,
  author = 	 {G. Schellhorn},
  title = 	 {{Verification of ASM Refinements Using Generalized
                  Forward Simulation}},
  journal = 	 {{Journal of Universal Computer Science}},
  year = 	 {2001},
  volume =	 {7},
  number =	 {11},
  pages =	 {952-979},
  noteNOT =	 {\medskip \newline A generic proof method for
                  correctness of refinements of ASMs based on
                  commuting diagrams is presented.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{SchAhr97,
  author = 	 {G. Schellhorn and W. Ahrendt},
  title = 	 {{Reasoning about Abstract State Machines: The WAM
		  Case Study}},
  journal = 	 {Journal of Universal Computer Science},
  year = 	 {1997},
  volume =	 {3},
  number =	 {4},
  pages =	 {377-413},
  noteNOT =	 {\medskip \newline The authors apply the KIV
 		  (Karlsruhe Interactive Verifier) system to
 		  mechanically verify the proof of correctness of the
 		  Prolog to WAM transformation described in \cite{BoeRos95}.
 		  }
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@InProceedings{SchKap91, 
  author =       "M. Schrefl and G. Kappel", 
  title =        "{Cooperation Contracts}", 
  editor =       "T. J. Teorey", 
  pages =        "285-307", 
  booktitle =    "Proc. 10th International Conference on the Entity 
                  Relationship Approach", 
  year =         "1991", 
  organization = "E/R Institute", 
  noteNOT =         "\medskip \newline The authors introduce the concept 
                  of cooperative message handling and use ASMs
                  to give formal semantics." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Schmid01a,
  author = 	 {{J. Schmid}},
  title = 	 {{Compiling Abstract State Machines to C++ (Extended
                  Abstract)}}, 
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {298-300},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline A discussion of an automated tool
                  for compiling ASM specifications (from the ASM
                  Workbench tool) directly into production-quality C++
                  code.} 

}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{Schmid01b,
  author = 	 {J. Schmid},
  title = 	 {{Compiling Abstract State Machines to C++}},
  journal = 	 {{Journal of Universal Computer Science}},
  year = 	 {2001},
  volume =	 {7},
  number =	 {11},
  pages =	 {1068-1087},
  noteNOT =	 {\medskip \newline A presentation of a compilation
                  scheme to transform an ASM specification in the
                  syntax of the ASM-Workbench into C++, preserving the
                  specification structure in the generated code
                  without generating inefficient code. The implemented
                  compiler was used successfully in the industrial
                  FALKO application at Siemens Corporate Technology.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@PhdThesis{Shen2001,
  author = 	 {{W. Shen}},
  title = 	 {{The Application of Abstract State Machines in Software
                  Engineering}}, 
  school = 	 {University of Michigan},
  year = 	 {2001},
  noteNOT =	 {\medskip \newline An abstract of \cit{HugShe99}, and details
                  of work presented in
                  \cite{CoGuHS00,CoHuSh00,CoHuSh01a,CoHuSh01b}.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{ShCoHu01a,
  author = 	 {{W. Shen and K. Compton and J. Huggins}},
  title = 	 {{A Validation Method for a UML Model Based on Abstract State
                  Machines}},  
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {220-223},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline An announcement of an automated tool for
                  validation of UML models using ASM tools and SMV (see
                  \cite{ShCoHu02}).} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{ShCoHu02,
  author = 	 {{W. Shen and K. Compton and J. Huggins}},
  title = 	 {{A Toolset for Supporting UML Static and Dynamic Model
                  Checking}}, 
  booktitle = 	 {{26th International Computer Software and
                  Applications Conference (COMPSAC 2002), Prolonging
                  Software Life: Development and Redevelopment}},  
  pages =	 {147--152},
  year =	 {2002},
  month =	 {26--29 August},
  publisher =	 {IEEE Computer Society},
  noteNOT =	 {\medskip \newline A description of an automated tool
                  for static and dynamic validation of UML models;
                  ASMs are used to provide the semantics of UML as the
                  basis for the validation.  Announced previously in
                  \cite{ShCoHu01a}.  An earlier version appeared in
                  Proceedings of ASE2001 (16th IEEE International
                  Conference on Automated Software Engineering),
                  November 2001, 315--318.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@PhdThesis{Soloviev95,
  author = 	 {I. Soloviev},
  title = 	 {Exploration and experimental implementation of
                  recursive patterns and functions imbedding into
                  Prolog language syntactical environment.},
  school = 	 {St. Petersburg University},
  year = 	 {1995},
  address =	 {Russia},
  noteNOT =	 {\medskip \newline In Russian.  A functional
                  extension of Prolog with a specialized unification
                  algorithm is proposed.  ASMs are used to define the
                  operational semantics of the language.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Sona01,
  author = 	 {{D. Sona}},
  title = 	 {{Proposal for a Neural Abstract Machine}},
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {294-297},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline An extended abstract of a proposal
                  for a universal model of neural networks, the Neural
                  Abstract Machine, whose semantics are given by ASMs.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Spielmann99,
  author = 	 {M. Spielmann},
  title = 	 {{Automatic Verification of Abstract State Machines}},
  booktitle = 	 {{Proceedings of 11th International Conference on
                  Computer-Aided Verification (CAV '99)}},
  pages =	 {431-442},
  year =	 {1999},
  editor = 	 {N. Halbwachs, and D. Peled},
  volume =	 {1633},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT =	 {\medskip \newline A class of restricted ASM programs
                  is introduced, along with a PSPACE algorithm for
                  verifying the correctness of properties of such
                  programs.  Limits on verifiability of
                  generalizations of this class are also discussed.
                  For later work by the same author see \cite{Spielmann00b}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Spielmann00a,
  author = 	 {M. Spielmann},
  title = 	 {{Verification of Relational Transducers for
                  Electronic Commerce}}, 
  booktitle = 	 {{Proceedings of 19th ACM Symposium on Principles of
                  Database Systems (PODS 2000)}},
  year =	 {2000},
  publisher =	 {ACM Press},
  noteNOT =	 {\medskip \newline An investigation into the
                  verifiability of transaction protocols used in
                  electronic commerce.  A class of relational
                  transducers based on ASMs are introduced and shown
                  to be verifiable.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Spielmann00b,
  author = 	 {M. Spielmann},
  title = 	 {{Model Checking Abstract State Machines and Beyond}},
  booktitle = 	 {{Abstract State Machines: Theory and Applications}},
  pages =	 {323-340},
  year =	 {2000},
  editor =	 {{Y. Gurevich and P. Kutter and M. Odersky and L. Thiele}},
  volume =	 {1912},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT = 	 {\medskip \newline A systematic investigation of the
                  theoretical automatic verifiability of ASMs. Also
                  appears in TIK-Report 87, Swiss Federal Institute 
                  of Technology (ETH) Zurich, March 2000, 357--375.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{StaSch01,
  author = 	 {{R. St\"ark and J. Schmid}},
  title = 	 {{Java bytecode verification is not possible
                  (Extended Abstract)}},
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {232-234},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline An example of legal Java code
                  which is rejected by bytecode verifiers is given.
                  Conditions to be imposed on Java which make Java
                  code provably verifiable are stated.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{StaSch03,
  author = 	 {R. St\"ark and J. Schmid},
  title = 	 {{Completeness of a Bytecode Verifier and a
                  Certifying Java-to-JVM Compiler}},
  journal = 	 {J. of Automated Reasoning},
  year = 	 {2003},
  volume =	 {30},
  number =	 {3-4},
  pages =	 {323--361},
  noteNOT =	 {\medskip \newline A proof that the Java-to-JVM
                  compiler generates verifiable bytecode. ASMs are
                  used to specify the JVM and the bytecode verifier.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{StaNan01,
  author = 	 {{R. St\"ark and S. Nanchen}},
  title = 	 {{A Logic for Abstract State Machines}},
  journal = 	 {{Journal of Universal Computer Science}},
  year = 	 {2001},
  volume =	 {7},
  number =	 {11},
  pages =	 {980-1005},
  noteNOT =	 {\medskip \newline A logic for sequential,
                  non-distributed ASMs is presented.  The logic allows
                  for sequential and hierarchical composition; it is
                  proven correct for non-recursive ASMs.  An extended
                  abstract appears in L. Fribourg, ed., "Computer
                  Science Logic", Springer LNCS 2142, 2001,
                  217-231.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@Book{StScBo01,
  author = 	 {R. St\"ark and J. Schmid and E. B\"orger},
  title = 	 {{Java and the Java Virtual Machine: Definition,
                  Verification, Validation}},
  publisher = 	 {Springer-Verlag},
  year = 	 {2001},
  noteNOT =	 {\medskip \newline A high-level description, together
                  with a mathematical and an experimental analysis, of
                  Java and of the Java Virtual Machine (JVM),
                  including a standard compiler of Java programs to
                  JVM code and the security critical bytecode verifier
                  component of the JVM.  Includes an executable ASM
                  specification written for AsmGofer.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@Article{Stroetmann97,
  author = 	 {K. Stroetmann},
  title = 	 {{The Constrained Shortest Path Problem: A Case Study
		  In Using ASMs}},
  journal = 	 {Journal of Universal Computer Science},
  year = 	 {1997},
  volume =	 {3},
  number =	 {4},
  pages =	 {304-319},
  noteNOT =	 {\medskip \newline An abstract, nondeterministic
 		  form of the constrained shortest path problem is
 		  defined as an ASM and proven correct, then refined
 		  to the level of implementation.}  
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@PhdThesis{Suenbuel01,
  author = 	 {A. S\"unb\"ul},
  title = 	 {{Architectural Design of Evolutionary Software Systems in
                  Continuous Software Engineering}},  
  school = 	 {Technical University of Berlin},
  year = 	 {2001}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{TeKuWe00,
  author = 	 {J. Teich and P. Kutter and R. Weper},
  title = 	 {{Description and Simulation of Microprocessor
                  Instruction Sets Using ASMs}}, 
  booktitle = 	 {{Abstract State Machines: Theory and Applications}},
  pages =	 {266-286},
  year =	 {2000},
  editor =	 {{Y. Gurevich and P. Kutter and M. Odersky and L. Thiele}},
  volume =	 {1912},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT = 	 {\medskip \newline A methodology for transforming
                  register transfer descriptions of microprocessors
                  into executable ASM specifications is described.
                  Also appears in TIK-Report 87, Swiss Federal
                  Institute of Technology (ETH) Zurich, March 2000, 376--397.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Thalheim01,
  author = 	 {{B. Thalheim}},
  title = 	 {{ASM Specification of Internet Information Services}},
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {301-304},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline A theory of Internet information
                  sites is proposed, based on a theory of media
                  objects and ASMs.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@PhdThesis{Tonino97,
  author = 	 {H. Tonino},
  title = 	 {{A Theory of Many-sorted Evolving Algebras}},
  school = 	 {Delft University of Technology},
  year = 	 {1997},
  type =	 {Ph.D. Thesis},
  pages =        {VIII+191},
  noteNOT =	 {\medskip \newline Based on a two-valued many-sorted
 		  logic of partial functions (with a complete and
 		  sound Fitch-style axiomatization) a structural
 		  operational and a Hoare-style axiomatic semantics
 		  is given for many-sorted non-distributed
 		  deterministic ASMs.  The SOS semantics is defined in
 		  two levels, one for the sequential and one for the
 		  parallel ASM constructs.  Two (sound but not
 		  complete) Hoare-style descriptions are given, one
 		  for partial and one for total correctness.  An
                  extended abstract appears under the title {\em A
                  Sound and Complete SOS-Semantics for Non-Distributed
                  Deterministic Abstract State Machines}, Proceedings
                  of the 28th Annual Conference of the German Society
                  of Computer Science, Technical Report, Magdeburg
                  University, 1998.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@TechReport{TonVis96,
  author = 	 {H. Tonino and J. Visser},
  title = 	 {{Stepwise Refinement of an Anstract State Machine
		  for WHNF-Reduction of $\lambda$-Terms}},
  institution =  {Faculty of Technical Mathematics and Informatics,
		  Delft University of Technology},
  year = 	 {1996},
  type =	 {Technical Report},
  number =	 {96-154},
  noteNOT =	 {\medskip \newline A series of ASMs for finding the
 		  weak head normal form (WHNF) of an arbitrary term of
 		  the $\lambda$-calculus is presented.}  
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  
 		  
@TechReport{Vale93, 
  author =       "M. Vale", 
  title =        "{The Evolving Algebra Semantics of COBOL. Part I: 
                  Programs and Control}", 
  institution =  "EECS Dept., University of Michigan", 
  year =         "1993", 
  number =       "CSE-TR-162-93", 
  noteNOT =         "\medskip \newline An ASM for the control constructs
		  of COBOL.  A description of a plan for a series
		  of ASMs for all of COBOL is sketched (but not implemented)."
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@MastersThesis{Visser96,
  author = 	 {J. Visser},
  title = 	 {{Evolving algebras}},
  school = 	 {Faculty of Technical Mathematics and Informatics,
		  Delft University of Technology},
  year = 	 {1996},
  address =	 {Zuidplantsoen 4, 2628 BZ Delft, The Netherlands},
  type =	 {Master's Thesis},
  noteNOT =         {\medskip \newline The monad programming method is
		  used to write a compiler/run-analyzer for ASMs in Gofer.
		  Static functions can be supplied to the ASMs by
		  means of Gofer functions.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 		  
		  
@InCollection{Wallace94, 
  author =       "C. Wallace", 
  title =        "{The Semantics of the C++ Programming Language}", 
  booktitle =    "Specification and Validation Methods", 
  publisher =    "Oxford University Press", 
  year =         "1995", 
  pages =        "131-164",
  editor =       "E. B{\"o}rger", 
  noteNOT =         "\medskip \newline The semantical description in 
                  \cite{GurHug93} is extended to encompass all of 
                  C++." 
} 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@TechReport{Wallace97,
  author = 	 {C. Wallace},
  title = 	 {{The Semantics of the Java Programming Language:
		  Preliminary Version}},
  institution =  {EECS Dept., University of Michigan},
  year = 	 {1997},
  type = 	 {Technical Report},
  month = 	 {December},
  number =       {CSE-TR-355-97},
  noteNOT = 	 {\medskip \newline A specification of the static and
		  dynamic semantics of Java, using ASMs and
		  Montages \cite{KutPie97a}.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@InProceedings{WaGuSo95,
  author =	"C. Wallace and Y. Gurevich and N. Soparkar",
  title =	"{Formalizing Recovery in Transaction-Oriented Database
		 Systems}",
  editor =	"S. Chaudhuri and A. Deshpande and R. Krishnamurthy",
  pages =	"166-185",
  booktitle =	"Proceedings of the Seventh International Conference
		 on Management of Data",
  year =	"1995",
  publisher =	"Tata McGraw-Hill",
  address =	"New Delhi, India",
  noteNOT =	"\medskip \newline The specification and verification
		 of the Undo/Redo algorithm is
		 presented in a discussion of ASMs as a
		 formal tool for database recovery.  An early version
		 of \cite{GuSoWa97}."
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{WaTrAm01a,
  author = 	 {{C. Wallace and G. Tremblay and J. Amaral}}, 
  title = 	 {{Specification and Verification of the LC Cache
                  Protocol (Extended Abstract)}}, 
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {275-278},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline An extended abstract describing a
                  specification and verification of a shared memory
                  consistency model of Gao and Sarkar.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@Article{WaTrAm01b,
  author = 	 {{C. Wallace and G. Tremblay and J. Amaral}}, 
  title = 	 {{An Abstract State Machine Specification and
                  Verification of the Location Consistency Memory
                  Model and Cache Protocol}},
  journal = 	 {{Journal of Universal Computer Science}},
  year = 	 {2001},
  volume =	 {7},
  number =	 {11},
  pages =	 {1088-1112},
  noteNOT =	 {\medskip \newline ASMs are used to give formal
                  operational semantics for the Location Consistency
                  memory model and cache protocol. The cache protocol
                  is proved to satisfy the memory model, but in a way
                  that is strictly stronger than necessary,
                  disallowing certain behavior allowed by the memory
                  model.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@Article{Winter97,
  author = 	 {K. Winter},
  title = 	 {{Model Checking for Abstract State Machines}},
  journal = 	 {Journal of Universal Computer Science},
  year = 	 {1997},
  volume =	 {3},
  number =	 {5},
  pages =	 {689-701},
  noteNOT =	 {\medskip \newline A framework is developed for using
                 a model checker to verify ASM models. It is applied
                  to the production cell control model described in
                  \cite{BoeMea97}.  For an extension see
                  \cite{DelWin99,Winter00}.}   
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Winter00,
  author = 	 {K. Winter},
  title = 	 {{Towards a Methodology for Model Checking ASM:
                  Lessons Learned from the FLASH Case Study}},
  booktitle = 	 {{Abstract State Machines: Theory and Applications}},
  pages =	 {341--360},
  year =	 {2000},
  editor =	 {{Y. Gurevich and P. Kutter and M. Odersky and L. Thiele}},
  volume =	 {1912},
  series =	 {LNCS},
  publisher =	 {Springer-Verlag},
  noteNOT = 	 {\medskip \newline A general discussion of applying
                  model checking to ASMs.  The ASM specification of
                  the FLASH cache coherence protocol \cite{Durand98} is
                  checked using SMV as a case study.  An extension of
                  \cite{DelWin99,Winter97}.  Also
                  appears in TIK-Report 87, Swiss Federal Institute 
                  of Technology (ETH) Zurich, March 2000, 398--425.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@PhdThesis{Winter01a,
  author = 	 {K. Winter},
  title = 	 {Model Checking Abstract State Machines},
  school = 	 {Technical University of Berlin, Germany},
  year = 	 {2001},
  noteNOT =	 {\medskip \newline Tool support for ASMs via automated model
                  checking is investigated.  The ASM Workbench is used as the
                  core framework for ASM; interfaces are provided to the SMV
                  model checker and the MDG-Package.  The practicability and
                  limitations of both approaches are discussed.
                  Includes \cite{Winter97,DelWin00,Winter00,Winter01d}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{Winter01b,
  author = 	 {K. Winter},
  title = 	 {{Model Checking with Abstract Types}},
  booktitle = 	 {{Electronic Notes in Theoretical Computer Science}},
  year =	 {2001},
  editor =	 {S. Stoller and W. Visser},
  volume =	 {55},
  number =	 {3},
  publisher =	 {Elsevier},
  noteNOT =	 {\medskip \newline An interface from ASMs to the Multiway
                  Decision Graph (MDG) package to support model 
                  checking with abstract types is described.
                  Announced in \cite{Winter01c}.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{Winter01c,
  author = 	 {K. Winter},
  title = 	 {{Supporting Abstraction when Model Checking ASM}},
  booktitle = 	 {{Formal Methods and Tools for Computer Science
                  (Proceedings of Eurocast 2001)}},
  pages =	 {243-246},
  year =	 {2001},
  editor =	 {R. Moreno-D\'iaz and A. Quesada-Arencibia},
  address =	 {Canary Islands, Spain},
  month =	 {February},
  organization = {Universidad de Las Palmas de Gran Canaria},
  noteNOT =	 {\medskip \newline An announcement of the use of
                  multiway decision diagrams (MDGs) to support
                  abstraction while model-checking ASMs.  See
                  \cite{Winter01d}.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@TechReport{Winter01d,
  author = 	 {K. Winter},
  title = 	 {{Supporting Abstraction when Model Checking ASM}},
  institution =  {SVRC, University of Queensland},
  year = 	 {2001},
  type =	 {Technical Report},
  number =	 {01-20},
  month =	 {June},
  noteNOT =	 {\medskip \newline An extension of the model checking
                  interface between ASM Workbench and SMV
                  \cite{DelWin00} is presented which supports
                  abstractions for infinite-state ASMs.  An interface
                  to Multiway Decision Graphs (MDGs) is also presented.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{Winter01e,
  author = 	 {K. Winter},
  title = 	 {{Model Checking with Abstract Types}},
  booktitle = 	 {{Workshop on Software Model Checking}},
  year =	 {2001},
  editor =	 {S. Stoller and W. Visser},
  volume =	 {55},
  number =	 {3},
  series =	 {Electronic Notes in Theoretical Computer Science},
  publisher =	 {Elsevier Science B.V.},
  noteNOT =	 {\medskip \newline An extension of \cite{Winter01a}.
                  A transformation algorithm from ASMs to MDGs is
                  presented that automatically generates abstract
                  models once the user has marked the data to be
                  abstracted.  MDG model checking algorithms are
                  adapted for the treatment of ASM models.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@Misc{Zamulin97a,
  author =	 {A. Zamulin},
  title =	 {{Typed Gurevich Machines Revisited}},
  howpublished = {Joint CS \& IIS Bulletin, Computer Science},
  number =       {7},
  pages =        {95-122},		  
  year =	 {1997},
  noteNOT =	 {\medskip \newline An approach to combining
		  type-structured algebraic specifications and ASMs is
		  proposed.  A preliminary version appeared in 1996 as
		  preprint 36 of the Institute of Informatics Systems,
		  Novosibirsk.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@TechReport{Zamulin97b,
  author = 	 {A. Zamulin},
  title = 	 {{Specification of an Oberon Compiler by means of a
		  Typed Gurevich Machine}},
  institution =  {Institute of Informatics Systems of the Siberian
		  Division of the Russian Academy of Sciences},
  year = 	 {1997},
  type =	 {Technical Report},
  number =	 {589.3945009.00007-01},
  address =      {Novosibirsk},
  noteNOT =         {\medskip \newline A Typed Gurevich Machine
		  \cite{Zamulin97a} is used to define a compiler for
		  Oberon to an algebraically-specified abstract target
		  machine.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Zamulin97c,
  author = 	 {A. Zamulin},
  title = 	 {{Algebraic Specification of Dynamic Objects}},
  booktitle = 	 {{Proceedings of LMO'97 (Acte du Colloque Langage et
		  Modeles a Objets)}},
  year = 	 {1997},
  publisher =    {Edition Hermes},
  address = 	 {Paris},
  month = 	 {22-24 October},
  pages = 	 {111-127},
  noteNOT = 	 {\medskip \newline A model for describing the
		  behavior of dynamic objects is presented, using a
		  state-transition system with the same semantics as
		  (though not explicitly identified as) ASMs.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{Zamulin98a,
  author = 	 {A. Zamulin},
  title = 	 {{Object-oriented Abstract State Machines}},
  booktitle = 	 {Proceedings of the 28th Annual Conference of the
                  German Society of Computer Science},
  year =	 {1998},
  publisher =	 {Technical Report, Magdeburg University},
  noteNOT =	 {\medskip \newline A proposed extension of ASMs to
                  include objects.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@InProceedings{Zamulin98b,
  author = 	 {A. Zamulin},
  title = 	 {{Specification of Dynamic Systems by Typed Gurevich
                  Machines}},  
  booktitle = 	 {Proceedings of the 13th International Conference on
                  System Science},
  year =	 {1998},
  editor =       {Z. Bubnicki and A. Grzech},
  month =        {15-18 September},
  address =      {Wroclaw, Poland},
  pages =        {160-167},
  noteNOT =	 {\medskip \newline A combination of many-sorted
                  algebraic specifications for states and ASM-rules
                  for transitions is proposed as an approach for
                  dynamic system specification.  The approach is used
                  in \cite{Zamulin97b} to specify an Oberon compiler.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Zamulin00a,
  author = 	 {A. Zamulin},
  title = 	 {{Generic Facilities in Object-Oriented ASMs}},
  booktitle = 	 {{Abstract State Machines -- ASM 2000, International
                  Workshop on Abstract State Machines, Monte Verita,
                  Switzerland, Local Proceedings}},
  pages =	 {426--446},
  year =	 {2000},
  editor =	 {Y. Gurevich and P. Kutter and M. Odersky and L. Thiele},
  number =       {87},
  series =	 {TIK-Report},
  month =	 {March},
  organization = {Swiss Federal Institute of Technology (ETH) Zurich},
  noteNOT = 	 {\medskip \newline The object-oriented ASM framework
                  introduced in \cite{Zamulin98a} is extended to allow
                  the definition of generic object types, type
                  categories, functions, and procedures.  Examples
                  from the C++ Standard Template Library (STL) are
                  provided.  Previously appeared in Preprint 60,
                  Institute of Informatics Systems, Siberian Division
                  of the Russian Academy of Sciences, Novosibirsk, 1999.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		  

@InProceedings{Zamulin00b,
  author = 	 {A. Zamulin},
  title = 	 {{Specifications in-the-Large by Typed ASMs}},
  booktitle = 	 {{Abstract State Machines -- ASM 2000, International
                  Workshop on Abstract State Machines, Monte Verita,
                  Switzerland, Local Proceedings}},
  pages =	 {447--461},
  year =	 {2000},
  editor =	 {Y. Gurevich and P. Kutter and M. Odersky and L. Thiele},
  number =       {87},
  series =	 {TIK-Report},
  month =	 {March},
  organization = {Swiss Federal Institute of Technology (ETH) Zurich},
  noteNOT = 	 {\medskip \newline A discussion of combining typed
                  ASMs (as proposed in \cite{Zamulin98b}) to produce
                  larger ASMs.}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@TechReport{Zamulin03,
  author = 	 {A. Zamulin},
  title = 	 {{State-based Semantics of a Pascal-like Language}},
  institution =  {{Institute of Informatics Systems}},
  year = 	 {2003},
  type =	 {Preprint},
  number =	 {104},
  address =	 {Novosibirsk},
  noteNOT =	 {\medskip \newline A technique for describing the
                  semantics of an imperative, Pascal-like language in
                  terms of ASM update sets is described.} 
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		  
@Article{ZimGau97,
  author = 	 {W. Zimmerman and T. Gaul},
  title = 	 {{On the Construction of Correct Compiler Back-Ends:
		  An ASM Approach}},
  journal = 	 {Journal of Universal Computer Science},
  year = 	 {1997},
  volume =	 {3},
  number =	 {5},
  pages =	 {504-567},
  noteNOT =	 {\medskip \newline The authors use ASMs to construct
 		  provably correct compiler back-ends based on
 		  realistic intermediate languages (and check the
 		  correctness of their proofs using PVS). }
}
